Unrecognized Word: ArrrayLists
Recognized Word: The
Unrecognized Word: DynamicArrayOfInt
Recognized Word: class
Recognized Word: could
Recognized Word: be
Recognized Word: used
Recognized Word: in
Recognized Word: any
Recognized Word: situation
Recognized Word: where
Recognized Word: an
Recognized Word: array
Recognized Word: of
Recognized Word: int
Recognized Word: with
Recognized Word: no
Recognized Word: preset
Recognized Word: limit
Recognized Word: on
Recognized Word: the
Recognized Word: size
Recognized Word: is
Recognized Word: needed
Recognized Word: However
Recognized Word: if
Recognized Word: we
Recognized Word: want
Recognized Word: to
Recognized Word: store
Recognized Word: Shapes
Recognized Word: instead
Recognized Word: of
Unrecognized Word: ints
Recognized Word: we
Recognized Word: would
Recognized Word: have
Recognized Word: to
Recognized Word: define
Recognized Word: a
Recognized Word: new
Recognized Word: class
Recognized Word: to
Recognized Word: do
Recognized Word: it
Recognized Word: That
Recognized Word: class
Recognized Word: probably
Recognized Word: named
Unrecognized Word: 
Unrecognized Word: DynamicArrayOfShape
Unrecognized Word: 
Recognized Word: would
Recognized Word: look
Recognized Word: exactly
Recognized Word: the
Recognized Word: same
Recognized Word: as
Recognized Word: the
Unrecognized Word: DynamicArrayOfInt
Recognized Word: class
Recognized Word: except
Recognized Word: that
Recognized Word: everywhere
Recognized Word: the
Recognized Word: type
Unrecognized Word: 
Recognized Word: int
Recognized Word: appears
Recognized Word: it
Recognized Word: would
Recognized Word: be
Recognized Word: replaced
Recognized Word: by
Recognized Word: the
Recognized Word: type
Unrecognized Word: 
Recognized Word: Shape
Unrecognized Word: 
Recognized Word: Similarly
Recognized Word: we
Recognized Word: could
Recognized Word: define
Recognized Word: a
Unrecognized Word: DynamicArrayOfDouble
Recognized Word: class
Recognized Word: a
Unrecognized Word: DynamicArrayOfPlayer
Recognized Word: class
Recognized Word: and
Recognized Word: so
Recognized Word: on
Recognized Word: But
Recognized Word: there
Recognized Word: is
Recognized Word: something
Recognized Word: a
Recognized Word: little
Recognized Word: silly
Recognized Word: about
Recognized Word: this
Recognized Word: since
Recognized Word: all
Recognized Word: these
Recognized Word: classes
Recognized Word: are
Recognized Word: close
Recognized Word: to
Recognized Word: being
Recognized Word: identical
Recognized Word: It
Recognized Word: would
Recognized Word: be
Recognized Word: nice
Recognized Word: to
Recognized Word: be
Recognized Word: able
Recognized Word: to
Recognized Word: write
Recognized Word: some
Recognized Word: kind
Recognized Word: of
Recognized Word: source
Recognized Word: code
Recognized Word: once
Recognized Word: and
Recognized Word: for
Recognized Word: all
Recognized Word: that
Recognized Word: could
Recognized Word: be
Recognized Word: used
Recognized Word: to
Recognized Word: generate
Recognized Word: any
Recognized Word: of
Recognized Word: these
Recognized Word: classes
Recognized Word: on
Recognized Word: demand
Recognized Word: given
Recognized Word: the
Recognized Word: type
Recognized Word: of
Recognized Word: value
Recognized Word: that
Recognized Word: we
Recognized Word: want
Recognized Word: to
Recognized Word: store
Recognized Word: This
Recognized Word: would
Recognized Word: be
Recognized Word: an
Recognized Word: example
Recognized Word: of
Recognized Word: generic
Recognized Word: programming
Recognized Word: Some
Recognized Word: programming
Recognized Word: languages
Recognized Word: such
Recognized Word: as
Unrecognized Word: C++
Recognized Word: have
Recognized Word: support
Recognized Word: for
Recognized Word: generic
Recognized Word: programming
Recognized Word: Java
Recognized Word: does
Recognized Word: not
Recognized Word: at
Recognized Word: least
Recognized Word: not
Recognized Word: quite
Recognized Word: We
Recognized Word: can
Recognized Word: come
Recognized Word: close
Recognized Word: to
Recognized Word: generic
Recognized Word: programming
Recognized Word: in
Recognized Word: Java
Recognized Word: by
Recognized Word: working
Recognized Word: with
Recognized Word: data
Recognized Word: structures
Recognized Word: that
Recognized Word: contain
Recognized Word: elements
Recognized Word: of
Recognized Word: type
Recognized Word: Object
Recognized Word: In
Recognized Word: Java
Recognized Word: every
Recognized Word: class
Recognized Word: is
Recognized Word: a
Recognized Word: subclass
Recognized Word: of
Recognized Word: the
Recognized Word: class
Recognized Word: named
Recognized Word: Object
Recognized Word: This
Recognized Word: means
Recognized Word: that
Recognized Word: every
Recognized Word: object
Recognized Word: can
Recognized Word: be
Recognized Word: assigned
Recognized Word: to
Recognized Word: a
Recognized Word: variable
Recognized Word: of
Recognized Word: type
Recognized Word: Object
Recognized Word: Any
Recognized Word: object
Recognized Word: can
Recognized Word: be
Recognized Word: put
Recognized Word: into
Recognized Word: an
Recognized Word: array
Recognized Word: of
Recognized Word: type
Unrecognized Word: Object[]
Recognized Word: If
Recognized Word: a
Recognized Word: subroutine
Recognized Word: has
Recognized Word: a
Recognized Word: formal
Recognized Word: parameter
Recognized Word: of
Recognized Word: type
Recognized Word: Object
Recognized Word: than
Recognized Word: any
Recognized Word: object
Recognized Word: can
Recognized Word: be
Recognized Word: passed
Recognized Word: to
Recognized Word: the
Recognized Word: subroutine
Recognized Word: as
Recognized Word: an
Recognized Word: actual
Recognized Word: parameter
Recognized Word: If
Recognized Word: we
Recognized Word: defined
Recognized Word: a
Unrecognized Word: DynamicArrayOfObject
Recognized Word: class
Recognized Word: then
Recognized Word: we
Recognized Word: could
Recognized Word: store
Recognized Word: objects
Recognized Word: of
Recognized Word: any
Recognized Word: type
Recognized Word: This
Recognized Word: is
Recognized Word: not
Recognized Word: true
Recognized Word: generic
Recognized Word: programming
Recognized Word: and
Recognized Word: it
Recognized Word: doesn't
Recognized Word: apply
Recognized Word: to
Recognized Word: the
Recognized Word: primitive
Recognized Word: types
Recognized Word: such
Recognized Word: as
Recognized Word: int
Recognized Word: and
Recognized Word: double
Recognized Word: But
Recognized Word: it
Recognized Word: does
Recognized Word: come
Recognized Word: close
Recognized Word: In
Recognized Word: fact
Recognized Word: there
Recognized Word: is
Recognized Word: no
Recognized Word: need
Recognized Word: for
Recognized Word: us
Recognized Word: to
Recognized Word: define
Recognized Word: a
Unrecognized Word: DynamicArrayOfObject
Recognized Word: class
Recognized Word: Java
Recognized Word: already
Recognized Word: has
Recognized Word: a
Recognized Word: standard
Recognized Word: class
Recognized Word: named
Unrecognized Word: ArrayList
Recognized Word: that
Recognized Word: serves
Recognized Word: much
Recognized Word: the
Recognized Word: same
Recognized Word: purpose
Recognized Word: The
Unrecognized Word: ArrayList
Recognized Word: class
Recognized Word: is
Recognized Word: in
Recognized Word: the
Recognized Word: package
Recognized Word: java
Unrecognized Word: util
Recognized Word: so
Recognized Word: if
Recognized Word: you
Recognized Word: want
Recognized Word: to
Recognized Word: use
Recognized Word: the
Unrecognized Word: ArrayList
Recognized Word: class
Recognized Word: in
Recognized Word: a
Recognized Word: program
Recognized Word: you
Recognized Word: should
Recognized Word: put
Recognized Word: the
Recognized Word: directive
Unrecognized Word: 
Recognized Word: import
Recognized Word: java
Unrecognized Word: util
Unrecognized Word: ArrayList;
Recognized Word: or
Unrecognized Word: 
Recognized Word: import
Recognized Word: java
Unrecognized Word: util
Unrecognized Word: *;
Recognized Word: at
Recognized Word: the
Recognized Word: beginning
Recognized Word: of
Recognized Word: your
Recognized Word: source
Recognized Word: code
Recognized Word: file
Recognized Word: The
Unrecognized Word: ArrayList
Recognized Word: class
Recognized Word: differs
Recognized Word: from
Recognized Word: my
Unrecognized Word: DynamicArrayOfInt
Recognized Word: class
Recognized Word: in
Recognized Word: that
Recognized Word: an
Unrecognized Word: ArrayList
Recognized Word: object
Recognized Word: always
Recognized Word: has
Recognized Word: a
Recognized Word: definite
Recognized Word: size
Recognized Word: and
Recognized Word: it
Recognized Word: is
Recognized Word: illegal
Recognized Word: to
Recognized Word: refer
Recognized Word: to
Recognized Word: a
Recognized Word: position
Recognized Word: in
Recognized Word: the
Unrecognized Word: ArrayList
Recognized Word: that
Recognized Word: lies
Recognized Word: outside
Recognized Word: its
Recognized Word: size
Recognized Word: In
Recognized Word: this
Recognized Word: an
Unrecognized Word: ArrayList
Recognized Word: is
Recognized Word: more
Recognized Word: like
Recognized Word: a
Recognized Word: regular
Recognized Word: array
Recognized Word: However
Recognized Word: the
Recognized Word: size
Recognized Word: of
Recognized Word: an
Unrecognized Word: ArrayList
Recognized Word: can
Recognized Word: be
Recognized Word: increased
Recognized Word: at
Recognized Word: will
Recognized Word: The
Unrecognized Word: ArrayList
Recognized Word: class
Recognized Word: defines
Recognized Word: many
Recognized Word: instance
Recognized Word: methods
Recognized Word: I'll
Recognized Word: describe
Recognized Word: some
Recognized Word: of
Recognized Word: the
Recognized Word: most
Recognized Word: useful
Recognized Word: Suppose
Recognized Word: that
Recognized Word: list
Recognized Word: is
Recognized Word: a
Recognized Word: variable
Recognized Word: of
Recognized Word: type
Unrecognized Word: ArrayList
Recognized Word: list
Unrecognized Word: size()
Unrecognized Word: --
Recognized Word: This
Recognized Word: function
Recognized Word: returns
Recognized Word: the
Recognized Word: current
Recognized Word: size
Recognized Word: of
Recognized Word: the
Unrecognized Word: ArrayList
Recognized Word: The
Recognized Word: only
Recognized Word: valid
Recognized Word: positions
Recognized Word: in
Recognized Word: the
Recognized Word: list
Recognized Word: are
Recognized Word: numbers
Recognized Word: in
Recognized Word: the
Recognized Word: range
Unrecognized Word: 0
Recognized Word: to
Recognized Word: list
Unrecognized Word: size()-1
Recognized Word: Note
Recognized Word: that
Recognized Word: the
Recognized Word: size
Recognized Word: can
Recognized Word: be
Recognized Word: zero
Recognized Word: A
Recognized Word: call
Recognized Word: to
Recognized Word: the
Recognized Word: default
Recognized Word: constructor
Recognized Word: new
Unrecognized Word: ArrayList()
Recognized Word: creates
Recognized Word: an
Unrecognized Word: ArrayList
Recognized Word: of
Recognized Word: size
Recognized Word: zero
Recognized Word: list
Unrecognized Word: add(obj)
Unrecognized Word: --
Recognized Word: Adds
Recognized Word: an
Recognized Word: object
Recognized Word: onto
Recognized Word: the
Recognized Word: end
Recognized Word: of
Recognized Word: the
Unrecognized Word: ArrayList
Recognized Word: increasing
Recognized Word: the
Recognized Word: size
Recognized Word: by
Unrecognized Word: 1
Recognized Word: The
Recognized Word: parameter
Recognized Word: obj
Recognized Word: can
Recognized Word: refer
Recognized Word: to
Recognized Word: an
Recognized Word: object
Recognized Word: of
Recognized Word: any
Recognized Word: type
Recognized Word: or
Recognized Word: it
Recognized Word: can
Recognized Word: be
Recognized Word: null
Recognized Word: list
Unrecognized Word: get(N)
Unrecognized Word: --
Recognized Word: This
Recognized Word: function
Recognized Word: returns
Recognized Word: the
Recognized Word: value
Recognized Word: stored
Recognized Word: at
Recognized Word: position
Recognized Word: N
Recognized Word: in
Recognized Word: the
Unrecognized Word: ArrayList
Recognized Word: N
Recognized Word: must
Recognized Word: be
Recognized Word: an
Recognized Word: integer
Recognized Word: in
Recognized Word: the
Recognized Word: range
Unrecognized Word: 0
Recognized Word: to
Recognized Word: list
Unrecognized Word: size()-1
Recognized Word: If
Recognized Word: N
Recognized Word: is
Recognized Word: outside
Recognized Word: this
Recognized Word: range
Recognized Word: an
Recognized Word: error
Recognized Word: occurs
Recognized Word: Calling
Recognized Word: this
Recognized Word: function
Recognized Word: is
Recognized Word: similar
Recognized Word: to
Recognized Word: referring
Recognized Word: to
Unrecognized Word: A[N]
Recognized Word: for
Recognized Word: an
Recognized Word: array
Recognized Word: A
Recognized Word: except
Recognized Word: that
Recognized Word: you
Recognized Word: can't
Recognized Word: use
Recognized Word: list
Unrecognized Word: get(N)
Recognized Word: on
Recognized Word: the
Recognized Word: left
Recognized Word: side
Recognized Word: of
Recognized Word: an
Recognized Word: assignment
Recognized Word: statement
Recognized Word: list
Unrecognized Word: set(N
Unrecognized Word: obj)
Unrecognized Word: --
Recognized Word: Assigns
Recognized Word: the
Recognized Word: object
Recognized Word: obj
Recognized Word: to
Recognized Word: position
Recognized Word: N
Recognized Word: in
Recognized Word: the
Unrecognized Word: ArrayList
Recognized Word: replacing
Recognized Word: the
Recognized Word: item
Recognized Word: previously
Recognized Word: stored
Recognized Word: at
Recognized Word: position
Recognized Word: N
Recognized Word: The
Recognized Word: integer
Recognized Word: N
Recognized Word: must
Recognized Word: be
Recognized Word: in
Recognized Word: the
Recognized Word: range
Recognized Word: from
Unrecognized Word: 0
Recognized Word: to
Recognized Word: list
Unrecognized Word: size()-1
Recognized Word: A
Recognized Word: call
Recognized Word: to
Recognized Word: this
Recognized Word: function
Recognized Word: is
Recognized Word: equivalent
Recognized Word: to
Recognized Word: the
Recognized Word: command
Unrecognized Word: A[N]
Unrecognized Word: =
Recognized Word: obj
Recognized Word: for
Recognized Word: an
Recognized Word: array
Recognized Word: A
Recognized Word: list
Unrecognized Word: remove(obj)
Unrecognized Word: --
Recognized Word: If
Recognized Word: the
Recognized Word: specified
Recognized Word: object
Recognized Word: occurs
Recognized Word: somewhere
Recognized Word: in
Recognized Word: the
Unrecognized Word: ArrayList
Recognized Word: it
Recognized Word: is
Recognized Word: removed
Recognized Word: from
Recognized Word: the
Recognized Word: list
Recognized Word: Any
Recognized Word: items
Recognized Word: in
Recognized Word: the
Recognized Word: list
Recognized Word: that
Recognized Word: come
Recognized Word: after
Recognized Word: the
Recognized Word: removed
Recognized Word: item
Recognized Word: are
Recognized Word: moved
Recognized Word: down
Recognized Word: one
Recognized Word: position
Recognized Word: The
Recognized Word: size
Recognized Word: of
Recognized Word: the
Unrecognized Word: ArrayList
Recognized Word: decreases
Recognized Word: by
Unrecognized Word: 1
Recognized Word: If
Recognized Word: obj
Recognized Word: occurs
Recognized Word: more
Recognized Word: than
Recognized Word: once
Recognized Word: in
Recognized Word: the
Recognized Word: list
Recognized Word: only
Recognized Word: the
Recognized Word: first
Recognized Word: copy
Recognized Word: is
Recognized Word: removed
Recognized Word: list
Unrecognized Word: remove(N)
Unrecognized Word: --
Recognized Word: For
Recognized Word: an
Recognized Word: integer
Recognized Word: N
Recognized Word: this
Recognized Word: removes
Recognized Word: the
Unrecognized Word: N-th
Recognized Word: item
Recognized Word: in
Recognized Word: the
Unrecognized Word: ArrayList
Recognized Word: N
Recognized Word: must
Recognized Word: be
Recognized Word: in
Recognized Word: the
Recognized Word: range
Unrecognized Word: 0
Recognized Word: to
Recognized Word: list
Unrecognized Word: size()-1
Recognized Word: Any
Recognized Word: items
Recognized Word: in
Recognized Word: the
Recognized Word: list
Recognized Word: that
Recognized Word: come
Recognized Word: after
Recognized Word: the
Recognized Word: removed
Recognized Word: item
Recognized Word: are
Recognized Word: moved
Recognized Word: down
Recognized Word: one
Recognized Word: position
Recognized Word: The
Recognized Word: size
Recognized Word: of
Recognized Word: the
Unrecognized Word: ArrayList
Recognized Word: decreases
Recognized Word: by
Unrecognized Word: 1
Recognized Word: list
Unrecognized Word: indexOf(obj)
Unrecognized Word: --
Recognized Word: A
Recognized Word: function
Recognized Word: that
Recognized Word: searches
Recognized Word: for
Recognized Word: the
Recognized Word: object
Recognized Word: obj
Recognized Word: in
Recognized Word: the
Unrecognized Word: ArrayList
Recognized Word: If
Recognized Word: the
Recognized Word: object
Recognized Word: is
Recognized Word: found
Recognized Word: in
Recognized Word: the
Recognized Word: list
Recognized Word: then
Recognized Word: the
Recognized Word: position
Recognized Word: number
Recognized Word: where
Recognized Word: it
Recognized Word: is
Recognized Word: found
Recognized Word: is
Recognized Word: returned
Recognized Word: If
Recognized Word: the
Recognized Word: object
Recognized Word: is
Recognized Word: not
Recognized Word: found
Recognized Word: then
Unrecognized Word: -1
Recognized Word: is
Recognized Word: returned
Recognized Word: For
Recognized Word: example
Recognized Word: suppose
Recognized Word: again
Recognized Word: that
Recognized Word: players
Recognized Word: in
Recognized Word: a
Recognized Word: game
Recognized Word: are
Recognized Word: represented
Recognized Word: by
Recognized Word: objects
Recognized Word: of
Recognized Word: type
Recognized Word: Player
Recognized Word: The
Recognized Word: players
Recognized Word: currently
Recognized Word: in
Recognized Word: the
Recognized Word: game
Recognized Word: could
Recognized Word: be
Recognized Word: stored
Recognized Word: in
Recognized Word: an
Unrecognized Word: ArrayList
Recognized Word: named
Recognized Word: players
Recognized Word: This
Recognized Word: variable
Recognized Word: would
Recognized Word: be
Recognized Word: declared
Recognized Word: as
=================================================
Total words checked:   827
Total correct words:   749
Total incorrect words: 78
Average compares per word: 64551
RunTime for checking:  846038325
Unrecognized Word: ArrrayLists
Recognized Word: The
Unrecognized Word: DynamicArrayOfInt
Recognized Word: class
Recognized Word: could
Recognized Word: be
Recognized Word: used
Recognized Word: in
Recognized Word: any
Recognized Word: situation
Recognized Word: where
Recognized Word: an
Recognized Word: array
Recognized Word: of
Recognized Word: int
Recognized Word: with
Recognized Word: no
Recognized Word: preset
Recognized Word: limit
Recognized Word: on
Recognized Word: the
Recognized Word: size
Recognized Word: is
Recognized Word: needed
Recognized Word: However
Recognized Word: if
Recognized Word: we
Recognized Word: want
Recognized Word: to
Recognized Word: store
Recognized Word: Shapes
Recognized Word: instead
Recognized Word: of
Unrecognized Word: ints
Recognized Word: we
Recognized Word: would
Recognized Word: have
Recognized Word: to
Recognized Word: define
Recognized Word: a
Recognized Word: new
Recognized Word: class
Recognized Word: to
Recognized Word: do
Recognized Word: it
Recognized Word: That
Recognized Word: class
Recognized Word: probably
Recognized Word: named
Unrecognized Word: 
Unrecognized Word: DynamicArrayOfShape
Unrecognized Word: 
Recognized Word: would
Recognized Word: look
Recognized Word: exactly
Recognized Word: the
Recognized Word: same
Recognized Word: as
Recognized Word: the
Unrecognized Word: DynamicArrayOfInt
Recognized Word: class
Recognized Word: except
Recognized Word: that
Recognized Word: everywhere
Recognized Word: the
Recognized Word: type
Unrecognized Word: 
Recognized Word: int
Recognized Word: appears
Recognized Word: it
Recognized Word: would
Recognized Word: be
Recognized Word: replaced
Recognized Word: by
Recognized Word: the
Recognized Word: type
Unrecognized Word: 
Recognized Word: Shape
Unrecognized Word: 
Recognized Word: Similarly
Recognized Word: we
Recognized Word: could
Recognized Word: define
Recognized Word: a
Unrecognized Word: DynamicArrayOfDouble
Recognized Word: class
Recognized Word: a
Unrecognized Word: DynamicArrayOfPlayer
Recognized Word: class
Recognized Word: and
Recognized Word: so
Recognized Word: on
Recognized Word: But
Recognized Word: there
Recognized Word: is
Recognized Word: something
Recognized Word: a
Recognized Word: little
Recognized Word: silly
Recognized Word: about
Recognized Word: this
Recognized Word: since
Recognized Word: all
Recognized Word: these
Recognized Word: classes
Recognized Word: are
Recognized Word: close
Recognized Word: to
Recognized Word: being
Recognized Word: identical
Recognized Word: It
Recognized Word: would
Recognized Word: be
Recognized Word: nice
Recognized Word: to
Recognized Word: be
Recognized Word: able
Recognized Word: to
Recognized Word: write
Recognized Word: some
Recognized Word: kind
Recognized Word: of
Recognized Word: source
Recognized Word: code
Recognized Word: once
Recognized Word: and
Recognized Word: for
Recognized Word: all
Recognized Word: that
Recognized Word: could
Recognized Word: be
Recognized Word: used
Recognized Word: to
Recognized Word: generate
Recognized Word: any
Recognized Word: of
Recognized Word: these
Recognized Word: classes
Recognized Word: on
Recognized Word: demand
Recognized Word: given
Recognized Word: the
Recognized Word: type
Recognized Word: of
Recognized Word: value
Recognized Word: that
Recognized Word: we
Recognized Word: want
Recognized Word: to
Recognized Word: store
Recognized Word: This
Recognized Word: would
Recognized Word: be
Recognized Word: an
Recognized Word: example
Recognized Word: of
Recognized Word: generic
Recognized Word: programming
Recognized Word: Some
Recognized Word: programming
Recognized Word: languages
Recognized Word: such
Recognized Word: as
Unrecognized Word: C++
Recognized Word: have
Recognized Word: support
Recognized Word: for
Recognized Word: generic
Recognized Word: programming
Recognized Word: Java
Recognized Word: does
Recognized Word: not
Recognized Word: at
Recognized Word: least
Recognized Word: not
Recognized Word: quite
Recognized Word: We
Recognized Word: can
Recognized Word: come
Recognized Word: close
Recognized Word: to
Recognized Word: generic
Recognized Word: programming
Recognized Word: in
Recognized Word: Java
Recognized Word: by
Recognized Word: working
Recognized Word: with
Recognized Word: data
Recognized Word: structures
Recognized Word: that
Recognized Word: contain
Recognized Word: elements
Recognized Word: of
Recognized Word: type
Recognized Word: Object
Recognized Word: In
Recognized Word: Java
Recognized Word: every
Recognized Word: class
Recognized Word: is
Recognized Word: a
Recognized Word: subclass
Recognized Word: of
Recognized Word: the
Recognized Word: class
Recognized Word: named
Recognized Word: Object
Recognized Word: This
Recognized Word: means
Recognized Word: that
Recognized Word: every
Recognized Word: object
Recognized Word: can
Recognized Word: be
Recognized Word: assigned
Recognized Word: to
Recognized Word: a
Recognized Word: variable
Recognized Word: of
Recognized Word: type
Recognized Word: Object
Recognized Word: Any
Recognized Word: object
Recognized Word: can
Recognized Word: be
Recognized Word: put
Recognized Word: into
Recognized Word: an
Recognized Word: array
Recognized Word: of
Recognized Word: type
Unrecognized Word: Object[]
Recognized Word: If
Recognized Word: a
Recognized Word: subroutine
Recognized Word: has
Recognized Word: a
Recognized Word: formal
Recognized Word: parameter
Recognized Word: of
Recognized Word: type
Recognized Word: Object
Recognized Word: than
Recognized Word: any
Recognized Word: object
Recognized Word: can
Recognized Word: be
Recognized Word: passed
Recognized Word: to
Recognized Word: the
Recognized Word: subroutine
Recognized Word: as
Recognized Word: an
Recognized Word: actual
Recognized Word: parameter
Recognized Word: If
Recognized Word: we
Recognized Word: defined
Recognized Word: a
Unrecognized Word: DynamicArrayOfObject
Recognized Word: class
Recognized Word: then
Recognized Word: we
Recognized Word: could
Recognized Word: store
Recognized Word: objects
Recognized Word: of
Recognized Word: any
Recognized Word: type
Recognized Word: This
Recognized Word: is
Recognized Word: not
Recognized Word: true
Recognized Word: generic
Recognized Word: programming
Recognized Word: and
Recognized Word: it
Recognized Word: doesn't
Recognized Word: apply
Recognized Word: to
Recognized Word: the
Recognized Word: primitive
Recognized Word: types
Recognized Word: such
Recognized Word: as
Recognized Word: int
Recognized Word: and
Recognized Word: double
Recognized Word: But
Recognized Word: it
Recognized Word: does
Recognized Word: come
Recognized Word: close
Recognized Word: In
Recognized Word: fact
Recognized Word: there
Recognized Word: is
Recognized Word: no
Recognized Word: need
Recognized Word: for
Recognized Word: us
Recognized Word: to
Recognized Word: define
Recognized Word: a
Unrecognized Word: DynamicArrayOfObject
Recognized Word: class
Recognized Word: Java
Recognized Word: already
Recognized Word: has
Recognized Word: a
Recognized Word: standard
Recognized Word: class
Recognized Word: named
Unrecognized Word: ArrayList
Recognized Word: that
Recognized Word: serves
Recognized Word: much
Recognized Word: the
Recognized Word: same
Recognized Word: purpose
Recognized Word: The
Unrecognized Word: ArrayList
Recognized Word: class
Recognized Word: is
Recognized Word: in
Recognized Word: the
Recognized Word: package
Recognized Word: java
Unrecognized Word: util
Recognized Word: so
Recognized Word: if
Recognized Word: you
Recognized Word: want
Recognized Word: to
Recognized Word: use
Recognized Word: the
Unrecognized Word: ArrayList
Recognized Word: class
Recognized Word: in
Recognized Word: a
Recognized Word: program
Recognized Word: you
Recognized Word: should
Recognized Word: put
Recognized Word: the
Recognized Word: directive
Unrecognized Word: 
Recognized Word: import
Recognized Word: java
Unrecognized Word: util
Unrecognized Word: ArrayList;
Recognized Word: or
Unrecognized Word: 
Recognized Word: import
Recognized Word: java
Unrecognized Word: util
Unrecognized Word: *;
Recognized Word: at
Recognized Word: the
Recognized Word: beginning
Recognized Word: of
Recognized Word: your
Recognized Word: source
Recognized Word: code
Recognized Word: file
Recognized Word: The
Unrecognized Word: ArrayList
Recognized Word: class
Recognized Word: differs
Recognized Word: from
Recognized Word: my
Unrecognized Word: DynamicArrayOfInt
Recognized Word: class
Recognized Word: in
Recognized Word: that
Recognized Word: an
Unrecognized Word: ArrayList
Recognized Word: object
Recognized Word: always
Recognized Word: has
Recognized Word: a
Recognized Word: definite
Recognized Word: size
Recognized Word: and
Recognized Word: it
Recognized Word: is
Recognized Word: illegal
Recognized Word: to
Recognized Word: refer
Recognized Word: to
Recognized Word: a
Recognized Word: position
Recognized Word: in
Recognized Word: the
Unrecognized Word: ArrayList
Recognized Word: that
Recognized Word: lies
Recognized Word: outside
Recognized Word: its
Recognized Word: size
Recognized Word: In
Recognized Word: this
Recognized Word: an
Unrecognized Word: ArrayList
Recognized Word: is
Recognized Word: more
Recognized Word: like
Recognized Word: a
Recognized Word: regular
Recognized Word: array
Recognized Word: However
Recognized Word: the
Recognized Word: size
Recognized Word: of
Recognized Word: an
Unrecognized Word: ArrayList
Recognized Word: can
Recognized Word: be
Recognized Word: increased
Recognized Word: at
Recognized Word: will
Recognized Word: The
Unrecognized Word: ArrayList
Recognized Word: class
Recognized Word: defines
Recognized Word: many
Recognized Word: instance
Recognized Word: methods
Recognized Word: I'll
Recognized Word: describe
Recognized Word: some
Recognized Word: of
Recognized Word: the
Recognized Word: most
Recognized Word: useful
Recognized Word: Suppose
Recognized Word: that
Recognized Word: list
Recognized Word: is
Recognized Word: a
Recognized Word: variable
Recognized Word: of
Recognized Word: type
Unrecognized Word: ArrayList
Recognized Word: list
Unrecognized Word: size()
Unrecognized Word: --
Recognized Word: This
Recognized Word: function
Recognized Word: returns
Recognized Word: the
Recognized Word: current
Recognized Word: size
Recognized Word: of
Recognized Word: the
Unrecognized Word: ArrayList
Recognized Word: The
Recognized Word: only
Recognized Word: valid
Recognized Word: positions
Recognized Word: in
Recognized Word: the
Recognized Word: list
Recognized Word: are
Recognized Word: numbers
Recognized Word: in
Recognized Word: the
Recognized Word: range
Unrecognized Word: 0
Recognized Word: to
Recognized Word: list
Unrecognized Word: size()-1
Recognized Word: Note
Recognized Word: that
Recognized Word: the
Recognized Word: size
Recognized Word: can
Recognized Word: be
Recognized Word: zero
Recognized Word: A
Recognized Word: call
Recognized Word: to
Recognized Word: the
Recognized Word: default
Recognized Word: constructor
Recognized Word: new
Unrecognized Word: ArrayList()
Recognized Word: creates
Recognized Word: an
Unrecognized Word: ArrayList
Recognized Word: of
Recognized Word: size
Recognized Word: zero
Recognized Word: list
Unrecognized Word: add(obj)
Unrecognized Word: --
Recognized Word: Adds
Recognized Word: an
Recognized Word: object
Recognized Word: onto
Recognized Word: the
Recognized Word: end
Recognized Word: of
Recognized Word: the
Unrecognized Word: ArrayList
Recognized Word: increasing
Recognized Word: the
Recognized Word: size
Recognized Word: by
Unrecognized Word: 1
Recognized Word: The
Recognized Word: parameter
Recognized Word: obj
Recognized Word: can
Recognized Word: refer
Recognized Word: to
Recognized Word: an
Recognized Word: object
Recognized Word: of
Recognized Word: any
Recognized Word: type
Recognized Word: or
Recognized Word: it
Recognized Word: can
Recognized Word: be
Recognized Word: null
Recognized Word: list
Unrecognized Word: get(N)
Unrecognized Word: --
Recognized Word: This
Recognized Word: function
Recognized Word: returns
Recognized Word: the
Recognized Word: value
Recognized Word: stored
Recognized Word: at
Recognized Word: position
Recognized Word: N
Recognized Word: in
Recognized Word: the
Unrecognized Word: ArrayList
Recognized Word: N
Recognized Word: must
Recognized Word: be
Recognized Word: an
Recognized Word: integer
Recognized Word: in
Recognized Word: the
Recognized Word: range
Unrecognized Word: 0
Recognized Word: to
Recognized Word: list
Unrecognized Word: size()-1
Recognized Word: If
Recognized Word: N
Recognized Word: is
Recognized Word: outside
Recognized Word: this
Recognized Word: range
Recognized Word: an
Recognized Word: error
Recognized Word: occurs
Recognized Word: Calling
Recognized Word: this
Recognized Word: function
Recognized Word: is
Recognized Word: similar
Recognized Word: to
Recognized Word: referring
Recognized Word: to
Unrecognized Word: A[N]
Recognized Word: for
Recognized Word: an
Recognized Word: array
Recognized Word: A
Recognized Word: except
Recognized Word: that
Recognized Word: you
Recognized Word: can't
Recognized Word: use
Recognized Word: list
Unrecognized Word: get(N)
Recognized Word: on
Recognized Word: the
Recognized Word: left
Recognized Word: side
Recognized Word: of
Recognized Word: an
Recognized Word: assignment
Recognized Word: statement
Recognized Word: list
Unrecognized Word: set(N
Unrecognized Word: obj)
Unrecognized Word: --
Recognized Word: Assigns
Recognized Word: the
Recognized Word: object
Recognized Word: obj
Recognized Word: to
Recognized Word: position
Recognized Word: N
Recognized Word: in
Recognized Word: the
Unrecognized Word: ArrayList
Recognized Word: replacing
Recognized Word: the
Recognized Word: item
Recognized Word: previously
Recognized Word: stored
Recognized Word: at
Recognized Word: position
Recognized Word: N
Recognized Word: The
Recognized Word: integer
Recognized Word: N
Recognized Word: must
Recognized Word: be
Recognized Word: in
Recognized Word: the
Recognized Word: range
Recognized Word: from
Unrecognized Word: 0
Recognized Word: to
Recognized Word: list
Unrecognized Word: size()-1
Recognized Word: A
Recognized Word: call
Recognized Word: to
Recognized Word: this
Recognized Word: function
Recognized Word: is
Recognized Word: equivalent
Recognized Word: to
Recognized Word: the
Recognized Word: command
Unrecognized Word: A[N]
Unrecognized Word: =
Recognized Word: obj
Recognized Word: for
Recognized Word: an
Recognized Word: array
Recognized Word: A
Recognized Word: list
Unrecognized Word: remove(obj)
Unrecognized Word: --
Recognized Word: If
Recognized Word: the
Recognized Word: specified
Recognized Word: object
Recognized Word: occurs
Recognized Word: somewhere
Recognized Word: in
Recognized Word: the
Unrecognized Word: ArrayList
Recognized Word: it
Recognized Word: is
Recognized Word: removed
Recognized Word: from
Recognized Word: the
Recognized Word: list
Recognized Word: Any
Recognized Word: items
Recognized Word: in
Recognized Word: the
Recognized Word: list
Recognized Word: that
Recognized Word: come
Recognized Word: after
Recognized Word: the
Recognized Word: removed
Recognized Word: item
Recognized Word: are
Recognized Word: moved
Recognized Word: down
Recognized Word: one
Recognized Word: position
Recognized Word: The
Recognized Word: size
Recognized Word: of
Recognized Word: the
Unrecognized Word: ArrayList
Recognized Word: decreases
Recognized Word: by
Unrecognized Word: 1
Recognized Word: If
Recognized Word: obj
Recognized Word: occurs
Recognized Word: more
Recognized Word: than
Recognized Word: once
Recognized Word: in
Recognized Word: the
Recognized Word: list
Recognized Word: only
Recognized Word: the
Recognized Word: first
Recognized Word: copy
Recognized Word: is
Recognized Word: removed
Recognized Word: list
Unrecognized Word: remove(N)
Unrecognized Word: --
Recognized Word: For
Recognized Word: an
Recognized Word: integer
Recognized Word: N
Recognized Word: this
Recognized Word: removes
Recognized Word: the
Unrecognized Word: N-th
Recognized Word: item
Recognized Word: in
Recognized Word: the
Unrecognized Word: ArrayList
Recognized Word: N
Recognized Word: must
Recognized Word: be
Recognized Word: in
Recognized Word: the
Recognized Word: range
Unrecognized Word: 0
Recognized Word: to
Recognized Word: list
Unrecognized Word: size()-1
Recognized Word: Any
Recognized Word: items
Recognized Word: in
Recognized Word: the
Recognized Word: list
Recognized Word: that
Recognized Word: come
Recognized Word: after
Recognized Word: the
Recognized Word: removed
Recognized Word: item
Recognized Word: are
Recognized Word: moved
Recognized Word: down
Recognized Word: one
Recognized Word: position
Recognized Word: The
Recognized Word: size
Recognized Word: of
Recognized Word: the
Unrecognized Word: ArrayList
Recognized Word: decreases
Recognized Word: by
Unrecognized Word: 1
Recognized Word: list
Unrecognized Word: indexOf(obj)
Unrecognized Word: --
Recognized Word: A
Recognized Word: function
Recognized Word: that
Recognized Word: searches
Recognized Word: for
Recognized Word: the
Recognized Word: object
Recognized Word: obj
Recognized Word: in
Recognized Word: the
Unrecognized Word: ArrayList
Recognized Word: If
Recognized Word: the
Recognized Word: object
Recognized Word: is
Recognized Word: found
Recognized Word: in
Recognized Word: the
Recognized Word: list
Recognized Word: then
Recognized Word: the
Recognized Word: position
Recognized Word: number
Recognized Word: where
Recognized Word: it
Recognized Word: is
Recognized Word: found
Recognized Word: is
Recognized Word: returned
Recognized Word: If
Recognized Word: the
Recognized Word: object
Recognized Word: is
Recognized Word: not
Recognized Word: found
Recognized Word: then
Unrecognized Word: -1
Recognized Word: is
Recognized Word: returned
Recognized Word: For
Recognized Word: example
Recognized Word: suppose
Recognized Word: again
Recognized Word: that
Recognized Word: players
Recognized Word: in
Recognized Word: a
Recognized Word: game
Recognized Word: are
Recognized Word: represented
Recognized Word: by
Recognized Word: objects
Recognized Word: of
Recognized Word: type
Recognized Word: Player
Recognized Word: The
Recognized Word: players
Recognized Word: currently
Recognized Word: in
Recognized Word: the
Recognized Word: game
Recognized Word: could
Recognized Word: be
Recognized Word: stored
Recognized Word: in
Recognized Word: an
Unrecognized Word: ArrayList
Recognized Word: named
Recognized Word: players
Recognized Word: This
Recognized Word: variable
Recognized Word: would
Recognized Word: be
Recognized Word: declared
Recognized Word: as
=================================================
Total words checked:   827
Total correct words:   749
Total incorrect words: 78
Average compares per word: 64551
RunTime for checking:  826398169
Unrecognized Word: ArrrayLists
Recognized Word: The
Unrecognized Word: DynamicArrayOfInt
Recognized Word: class
Recognized Word: could
Recognized Word: be
Recognized Word: used
Recognized Word: in
Recognized Word: any
Recognized Word: situation
Recognized Word: where
Recognized Word: an
Recognized Word: array
Recognized Word: of
Recognized Word: int
Recognized Word: with
Recognized Word: no
Recognized Word: preset
Recognized Word: limit
Recognized Word: on
Recognized Word: the
Recognized Word: size
Recognized Word: is
Recognized Word: needed
Recognized Word: However
Recognized Word: if
Recognized Word: we
Recognized Word: want
Recognized Word: to
Recognized Word: store
Recognized Word: Shapes
Recognized Word: instead
Recognized Word: of
Unrecognized Word: ints
Recognized Word: we
Recognized Word: would
Recognized Word: have
Recognized Word: to
Recognized Word: define
Recognized Word: a
Recognized Word: new
Recognized Word: class
Recognized Word: to
Recognized Word: do
Recognized Word: it
Recognized Word: That
Recognized Word: class
Recognized Word: probably
Recognized Word: named
Unrecognized Word: 
Unrecognized Word: DynamicArrayOfShape
Unrecognized Word: 
Recognized Word: would
Recognized Word: look
Recognized Word: exactly
Recognized Word: the
Recognized Word: same
Recognized Word: as
Recognized Word: the
Unrecognized Word: DynamicArrayOfInt
Recognized Word: class
Recognized Word: except
Recognized Word: that
Recognized Word: everywhere
Recognized Word: the
Recognized Word: type
Unrecognized Word: 
Recognized Word: int
Recognized Word: appears
Recognized Word: it
Recognized Word: would
Recognized Word: be
Recognized Word: replaced
Recognized Word: by
Recognized Word: the
Recognized Word: type
Unrecognized Word: 
Recognized Word: Shape
Unrecognized Word: 
Recognized Word: Similarly
Recognized Word: we
Recognized Word: could
Recognized Word: define
Recognized Word: a
Unrecognized Word: DynamicArrayOfDouble
Recognized Word: class
Recognized Word: a
Unrecognized Word: DynamicArrayOfPlayer
Recognized Word: class
Recognized Word: and
Recognized Word: so
Recognized Word: on
Recognized Word: But
Recognized Word: there
Recognized Word: is
Recognized Word: something
Recognized Word: a
Recognized Word: little
Recognized Word: silly
Recognized Word: about
Recognized Word: this
Recognized Word: since
Recognized Word: all
Recognized Word: these
Recognized Word: classes
Recognized Word: are
Recognized Word: close
Recognized Word: to
Recognized Word: being
Recognized Word: identical
Recognized Word: It
Recognized Word: would
Recognized Word: be
Recognized Word: nice
Recognized Word: to
Recognized Word: be
Recognized Word: able
Recognized Word: to
Recognized Word: write
Recognized Word: some
Recognized Word: kind
Recognized Word: of
Recognized Word: source
Recognized Word: code
Recognized Word: once
Recognized Word: and
Recognized Word: for
Recognized Word: all
Recognized Word: that
Recognized Word: could
Recognized Word: be
Recognized Word: used
Recognized Word: to
Recognized Word: generate
Recognized Word: any
Recognized Word: of
Recognized Word: these
Recognized Word: classes
Recognized Word: on
Recognized Word: demand
Recognized Word: given
Recognized Word: the
Recognized Word: type
Recognized Word: of
Recognized Word: value
Recognized Word: that
Recognized Word: we
Recognized Word: want
Recognized Word: to
Recognized Word: store
Recognized Word: This
Recognized Word: would
Recognized Word: be
Recognized Word: an
Recognized Word: example
Recognized Word: of
Recognized Word: generic
Recognized Word: programming
Recognized Word: Some
Recognized Word: programming
Recognized Word: languages
Recognized Word: such
Recognized Word: as
Unrecognized Word: C++
Recognized Word: have
Recognized Word: support
Recognized Word: for
Recognized Word: generic
Recognized Word: programming
Recognized Word: Java
Recognized Word: does
Recognized Word: not
Recognized Word: at
Recognized Word: least
Recognized Word: not
Recognized Word: quite
Recognized Word: We
Recognized Word: can
Recognized Word: come
Recognized Word: close
Recognized Word: to
Recognized Word: generic
Recognized Word: programming
Recognized Word: in
Recognized Word: Java
Recognized Word: by
Recognized Word: working
Recognized Word: with
Recognized Word: data
Recognized Word: structures
Recognized Word: that
Recognized Word: contain
Recognized Word: elements
Recognized Word: of
Recognized Word: type
Recognized Word: Object
Recognized Word: In
Recognized Word: Java
Recognized Word: every
Recognized Word: class
Recognized Word: is
Recognized Word: a
Recognized Word: subclass
Recognized Word: of
Recognized Word: the
Recognized Word: class
Recognized Word: named
Recognized Word: Object
Recognized Word: This
Recognized Word: means
Recognized Word: that
Recognized Word: every
Recognized Word: object
Recognized Word: can
Recognized Word: be
Recognized Word: assigned
Recognized Word: to
Recognized Word: a
Recognized Word: variable
Recognized Word: of
Recognized Word: type
Recognized Word: Object
Recognized Word: Any
Recognized Word: object
Recognized Word: can
Recognized Word: be
Recognized Word: put
Recognized Word: into
Recognized Word: an
Recognized Word: array
Recognized Word: of
Recognized Word: type
Unrecognized Word: Object[]
Recognized Word: If
Recognized Word: a
Recognized Word: subroutine
Recognized Word: has
Recognized Word: a
Recognized Word: formal
Recognized Word: parameter
Recognized Word: of
Recognized Word: type
Recognized Word: Object
Recognized Word: than
Recognized Word: any
Recognized Word: object
Recognized Word: can
Recognized Word: be
Recognized Word: passed
Recognized Word: to
Recognized Word: the
Recognized Word: subroutine
Recognized Word: as
Recognized Word: an
Recognized Word: actual
Recognized Word: parameter
Recognized Word: If
Recognized Word: we
Recognized Word: defined
Recognized Word: a
Unrecognized Word: DynamicArrayOfObject
Recognized Word: class
Recognized Word: then
Recognized Word: we
Recognized Word: could
Recognized Word: store
Recognized Word: objects
Recognized Word: of
Recognized Word: any
Recognized Word: type
Recognized Word: This
Recognized Word: is
Recognized Word: not
Recognized Word: true
Recognized Word: generic
Recognized Word: programming
Recognized Word: and
Recognized Word: it
Recognized Word: doesn't
Recognized Word: apply
Recognized Word: to
Recognized Word: the
Recognized Word: primitive
Recognized Word: types
Recognized Word: such
Recognized Word: as
Recognized Word: int
Recognized Word: and
Recognized Word: double
Recognized Word: But
Recognized Word: it
Recognized Word: does
Recognized Word: come
Recognized Word: close
Recognized Word: In
Recognized Word: fact
Recognized Word: there
Recognized Word: is
Recognized Word: no
Recognized Word: need
Recognized Word: for
Recognized Word: us
Recognized Word: to
Recognized Word: define
Recognized Word: a
Unrecognized Word: DynamicArrayOfObject
Recognized Word: class
Recognized Word: Java
Recognized Word: already
Recognized Word: has
Recognized Word: a
Recognized Word: standard
Recognized Word: class
Recognized Word: named
Unrecognized Word: ArrayList
Recognized Word: that
Recognized Word: serves
Recognized Word: much
Recognized Word: the
Recognized Word: same
Recognized Word: purpose
Recognized Word: The
Unrecognized Word: ArrayList
Recognized Word: class
Recognized Word: is
Recognized Word: in
Recognized Word: the
Recognized Word: package
Recognized Word: java
Unrecognized Word: util
Recognized Word: so
Recognized Word: if
Recognized Word: you
Recognized Word: want
Recognized Word: to
Recognized Word: use
Recognized Word: the
Unrecognized Word: ArrayList
Recognized Word: class
Recognized Word: in
Recognized Word: a
Recognized Word: program
Recognized Word: you
Recognized Word: should
Recognized Word: put
Recognized Word: the
Recognized Word: directive
Unrecognized Word: 
Recognized Word: import
Recognized Word: java
Unrecognized Word: util
Unrecognized Word: ArrayList;
Recognized Word: or
Unrecognized Word: 
Recognized Word: import
Recognized Word: java
Unrecognized Word: util
Unrecognized Word: *;
Recognized Word: at
Recognized Word: the
Recognized Word: beginning
Recognized Word: of
Recognized Word: your
Recognized Word: source
Recognized Word: code
Recognized Word: file
Recognized Word: The
Unrecognized Word: ArrayList
Recognized Word: class
Recognized Word: differs
Recognized Word: from
Recognized Word: my
Unrecognized Word: DynamicArrayOfInt
Recognized Word: class
Recognized Word: in
Recognized Word: that
Recognized Word: an
Unrecognized Word: ArrayList
Recognized Word: object
Recognized Word: always
Recognized Word: has
Recognized Word: a
Recognized Word: definite
Recognized Word: size
Recognized Word: and
Recognized Word: it
Recognized Word: is
Recognized Word: illegal
Recognized Word: to
Recognized Word: refer
Recognized Word: to
Recognized Word: a
Recognized Word: position
Recognized Word: in
Recognized Word: the
Unrecognized Word: ArrayList
Recognized Word: that
Recognized Word: lies
Recognized Word: outside
Recognized Word: its
Recognized Word: size
Recognized Word: In
Recognized Word: this
Recognized Word: an
Unrecognized Word: ArrayList
Recognized Word: is
Recognized Word: more
Recognized Word: like
Recognized Word: a
Recognized Word: regular
Recognized Word: array
Recognized Word: However
Recognized Word: the
Recognized Word: size
Recognized Word: of
Recognized Word: an
Unrecognized Word: ArrayList
Recognized Word: can
Recognized Word: be
Recognized Word: increased
Recognized Word: at
Recognized Word: will
Recognized Word: The
Unrecognized Word: ArrayList
Recognized Word: class
Recognized Word: defines
Recognized Word: many
Recognized Word: instance
Recognized Word: methods
Recognized Word: I'll
Recognized Word: describe
Recognized Word: some
Recognized Word: of
Recognized Word: the
Recognized Word: most
Recognized Word: useful
Recognized Word: Suppose
Recognized Word: that
Recognized Word: list
Recognized Word: is
Recognized Word: a
Recognized Word: variable
Recognized Word: of
Recognized Word: type
Unrecognized Word: ArrayList
Recognized Word: list
Unrecognized Word: size()
Unrecognized Word: --
Recognized Word: This
Recognized Word: function
Recognized Word: returns
Recognized Word: the
Recognized Word: current
Recognized Word: size
Recognized Word: of
Recognized Word: the
Unrecognized Word: ArrayList
Recognized Word: The
Recognized Word: only
Recognized Word: valid
Recognized Word: positions
Recognized Word: in
Recognized Word: the
Recognized Word: list
Recognized Word: are
Recognized Word: numbers
Recognized Word: in
Recognized Word: the
Recognized Word: range
Unrecognized Word: 0
Recognized Word: to
Recognized Word: list
Unrecognized Word: size()-1
Recognized Word: Note
Recognized Word: that
Recognized Word: the
Recognized Word: size
Recognized Word: can
Recognized Word: be
Recognized Word: zero
Recognized Word: A
Recognized Word: call
Recognized Word: to
Recognized Word: the
Recognized Word: default
Recognized Word: constructor
Recognized Word: new
Unrecognized Word: ArrayList()
Recognized Word: creates
Recognized Word: an
Unrecognized Word: ArrayList
Recognized Word: of
Recognized Word: size
Recognized Word: zero
Recognized Word: list
Unrecognized Word: add(obj)
Unrecognized Word: --
Recognized Word: Adds
Recognized Word: an
Recognized Word: object
Recognized Word: onto
Recognized Word: the
Recognized Word: end
Recognized Word: of
Recognized Word: the
Unrecognized Word: ArrayList
Recognized Word: increasing
Recognized Word: the
Recognized Word: size
Recognized Word: by
Unrecognized Word: 1
Recognized Word: The
Recognized Word: parameter
Recognized Word: obj
Recognized Word: can
Recognized Word: refer
Recognized Word: to
Recognized Word: an
Recognized Word: object
Recognized Word: of
Recognized Word: any
Recognized Word: type
Recognized Word: or
Recognized Word: it
Recognized Word: can
Recognized Word: be
Recognized Word: null
Recognized Word: list
Unrecognized Word: get(N)
Unrecognized Word: --
Recognized Word: This
Recognized Word: function
Recognized Word: returns
Recognized Word: the
Recognized Word: value
Recognized Word: stored
Recognized Word: at
Recognized Word: position
Recognized Word: N
Recognized Word: in
Recognized Word: the
Unrecognized Word: ArrayList
Recognized Word: N
Recognized Word: must
Recognized Word: be
Recognized Word: an
Recognized Word: integer
Recognized Word: in
Recognized Word: the
Recognized Word: range
Unrecognized Word: 0
Recognized Word: to
Recognized Word: list
Unrecognized Word: size()-1
Recognized Word: If
Recognized Word: N
Recognized Word: is
Recognized Word: outside
Recognized Word: this
Recognized Word: range
Recognized Word: an
Recognized Word: error
Recognized Word: occurs
Recognized Word: Calling
Recognized Word: this
Recognized Word: function
Recognized Word: is
Recognized Word: similar
Recognized Word: to
Recognized Word: referring
Recognized Word: to
Unrecognized Word: A[N]
Recognized Word: for
Recognized Word: an
Recognized Word: array
Recognized Word: A
Recognized Word: except
Recognized Word: that
Recognized Word: you
Recognized Word: can't
Recognized Word: use
Recognized Word: list
Unrecognized Word: get(N)
Recognized Word: on
Recognized Word: the
Recognized Word: left
Recognized Word: side
Recognized Word: of
Recognized Word: an
Recognized Word: assignment
Recognized Word: statement
Recognized Word: list
Unrecognized Word: set(N
Unrecognized Word: obj)
Unrecognized Word: --
Recognized Word: Assigns
Recognized Word: the
Recognized Word: object
Recognized Word: obj
Recognized Word: to
Recognized Word: position
Recognized Word: N
Recognized Word: in
Recognized Word: the
Unrecognized Word: ArrayList
Recognized Word: replacing
Recognized Word: the
Recognized Word: item
Recognized Word: previously
Recognized Word: stored
Recognized Word: at
Recognized Word: position
Recognized Word: N
Recognized Word: The
Recognized Word: integer
Recognized Word: N
Recognized Word: must
Recognized Word: be
Recognized Word: in
Recognized Word: the
Recognized Word: range
Recognized Word: from
Unrecognized Word: 0
Recognized Word: to
Recognized Word: list
Unrecognized Word: size()-1
Recognized Word: A
Recognized Word: call
Recognized Word: to
Recognized Word: this
Recognized Word: function
Recognized Word: is
Recognized Word: equivalent
Recognized Word: to
Recognized Word: the
Recognized Word: command
Unrecognized Word: A[N]
Unrecognized Word: =
Recognized Word: obj
Recognized Word: for
Recognized Word: an
Recognized Word: array
Recognized Word: A
Recognized Word: list
Unrecognized Word: remove(obj)
Unrecognized Word: --
Recognized Word: If
Recognized Word: the
Recognized Word: specified
Recognized Word: object
Recognized Word: occurs
Recognized Word: somewhere
Recognized Word: in
Recognized Word: the
Unrecognized Word: ArrayList
Recognized Word: it
Recognized Word: is
Recognized Word: removed
Recognized Word: from
Recognized Word: the
Recognized Word: list
Recognized Word: Any
Recognized Word: items
Recognized Word: in
Recognized Word: the
Recognized Word: list
Recognized Word: that
Recognized Word: come
Recognized Word: after
Recognized Word: the
Recognized Word: removed
Recognized Word: item
Recognized Word: are
Recognized Word: moved
Recognized Word: down
Recognized Word: one
Recognized Word: position
Recognized Word: The
Recognized Word: size
Recognized Word: of
Recognized Word: the
Unrecognized Word: ArrayList
Recognized Word: decreases
Recognized Word: by
Unrecognized Word: 1
Recognized Word: If
Recognized Word: obj
Recognized Word: occurs
Recognized Word: more
Recognized Word: than
Recognized Word: once
Recognized Word: in
Recognized Word: the
Recognized Word: list
Recognized Word: only
Recognized Word: the
Recognized Word: first
Recognized Word: copy
Recognized Word: is
Recognized Word: removed
Recognized Word: list
Unrecognized Word: remove(N)
Unrecognized Word: --
Recognized Word: For
Recognized Word: an
Recognized Word: integer
Recognized Word: N
Recognized Word: this
Recognized Word: removes
Recognized Word: the
Unrecognized Word: N-th
Recognized Word: item
Recognized Word: in
Recognized Word: the
Unrecognized Word: ArrayList
Recognized Word: N
Recognized Word: must
Recognized Word: be
Recognized Word: in
Recognized Word: the
Recognized Word: range
Unrecognized Word: 0
Recognized Word: to
Recognized Word: list
Unrecognized Word: size()-1
Recognized Word: Any
Recognized Word: items
Recognized Word: in
Recognized Word: the
Recognized Word: list
Recognized Word: that
Recognized Word: come
Recognized Word: after
Recognized Word: the
Recognized Word: removed
Recognized Word: item
Recognized Word: are
Recognized Word: moved
Recognized Word: down
Recognized Word: one
Recognized Word: position
Recognized Word: The
Recognized Word: size
Recognized Word: of
Recognized Word: the
Unrecognized Word: ArrayList
Recognized Word: decreases
Recognized Word: by
Unrecognized Word: 1
Recognized Word: list
Unrecognized Word: indexOf(obj)
Unrecognized Word: --
Recognized Word: A
Recognized Word: function
Recognized Word: that
Recognized Word: searches
Recognized Word: for
Recognized Word: the
Recognized Word: object
Recognized Word: obj
Recognized Word: in
Recognized Word: the
Unrecognized Word: ArrayList
Recognized Word: If
Recognized Word: the
Recognized Word: object
Recognized Word: is
Recognized Word: found
Recognized Word: in
Recognized Word: the
Recognized Word: list
Recognized Word: then
Recognized Word: the
Recognized Word: position
Recognized Word: number
Recognized Word: where
Recognized Word: it
Recognized Word: is
Recognized Word: found
Recognized Word: is
Recognized Word: returned
Recognized Word: If
Recognized Word: the
Recognized Word: object
Recognized Word: is
Recognized Word: not
Recognized Word: found
Recognized Word: then
Unrecognized Word: -1
Recognized Word: is
Recognized Word: returned
Recognized Word: For
Recognized Word: example
Recognized Word: suppose
Recognized Word: again
Recognized Word: that
Recognized Word: players
Recognized Word: in
Recognized Word: a
Recognized Word: game
Recognized Word: are
Recognized Word: represented
Recognized Word: by
Recognized Word: objects
Recognized Word: of
Recognized Word: type
Recognized Word: Player
Recognized Word: The
Recognized Word: players
Recognized Word: currently
Recognized Word: in
Recognized Word: the
Recognized Word: game
Recognized Word: could
Recognized Word: be
Recognized Word: stored
Recognized Word: in
Recognized Word: an
Unrecognized Word: ArrayList
Recognized Word: named
Recognized Word: players
Recognized Word: This
Recognized Word: variable
Recognized Word: would
Recognized Word: be
Recognized Word: declared
Recognized Word: as
=================================================
Total words checked:   827
Total correct words:   749
Total incorrect words: 78
Average compares per word: 64551
RunTime for checking:  813199495
Unrecognized Word: ArrrayLists
Recognized Word: The
Unrecognized Word: DynamicArrayOfInt
Recognized Word: class
Recognized Word: could
Recognized Word: be
Recognized Word: used
Recognized Word: in
Recognized Word: any
Recognized Word: situation
Recognized Word: where
Recognized Word: an
Recognized Word: array
Recognized Word: of
Recognized Word: int
Recognized Word: with
Recognized Word: no
Recognized Word: preset
Recognized Word: limit
Recognized Word: on
Recognized Word: the
Recognized Word: size
Recognized Word: is
Recognized Word: needed
Recognized Word: However
Recognized Word: if
Recognized Word: we
Recognized Word: want
Recognized Word: to
Recognized Word: store
Recognized Word: Shapes
Recognized Word: instead
Recognized Word: of
Unrecognized Word: ints
Recognized Word: we
Recognized Word: would
Recognized Word: have
Recognized Word: to
Recognized Word: define
Recognized Word: a
Recognized Word: new
Recognized Word: class
Recognized Word: to
Recognized Word: do
Recognized Word: it
Recognized Word: That
Recognized Word: class
Recognized Word: probably
Recognized Word: named
Unrecognized Word: 
Unrecognized Word: DynamicArrayOfShape
Unrecognized Word: 
Recognized Word: would
Recognized Word: look
Recognized Word: exactly
Recognized Word: the
Recognized Word: same
Recognized Word: as
Recognized Word: the
Unrecognized Word: DynamicArrayOfInt
Recognized Word: class
Recognized Word: except
Recognized Word: that
Recognized Word: everywhere
Recognized Word: the
Recognized Word: type
Unrecognized Word: 
Recognized Word: int
Recognized Word: appears
Recognized Word: it
Recognized Word: would
Recognized Word: be
Recognized Word: replaced
Recognized Word: by
Recognized Word: the
Recognized Word: type
Unrecognized Word: 
Recognized Word: Shape
Unrecognized Word: 
Recognized Word: Similarly
Recognized Word: we
Recognized Word: could
Recognized Word: define
Recognized Word: a
Unrecognized Word: DynamicArrayOfDouble
Recognized Word: class
Recognized Word: a
Unrecognized Word: DynamicArrayOfPlayer
Recognized Word: class
Recognized Word: and
Recognized Word: so
Recognized Word: on
Recognized Word: But
Recognized Word: there
Recognized Word: is
Recognized Word: something
Recognized Word: a
Recognized Word: little
Recognized Word: silly
Recognized Word: about
Recognized Word: this
Recognized Word: since
Recognized Word: all
Recognized Word: these
Recognized Word: classes
Recognized Word: are
Recognized Word: close
Recognized Word: to
Recognized Word: being
Recognized Word: identical
Recognized Word: It
Recognized Word: would
Recognized Word: be
Recognized Word: nice
Recognized Word: to
Recognized Word: be
Recognized Word: able
Recognized Word: to
Recognized Word: write
Recognized Word: some
Recognized Word: kind
Recognized Word: of
Recognized Word: source
Recognized Word: code
Recognized Word: once
Recognized Word: and
Recognized Word: for
Recognized Word: all
Recognized Word: that
Recognized Word: could
Recognized Word: be
Recognized Word: used
Recognized Word: to
Recognized Word: generate
Recognized Word: any
Recognized Word: of
Recognized Word: these
Recognized Word: classes
Recognized Word: on
Recognized Word: demand
Recognized Word: given
Recognized Word: the
Recognized Word: type
Recognized Word: of
Recognized Word: value
Recognized Word: that
Recognized Word: we
Recognized Word: want
Recognized Word: to
Recognized Word: store
Recognized Word: This
Recognized Word: would
Recognized Word: be
Recognized Word: an
Recognized Word: example
Recognized Word: of
Recognized Word: generic
Recognized Word: programming
Recognized Word: Some
Recognized Word: programming
Recognized Word: languages
Recognized Word: such
Recognized Word: as
Unrecognized Word: C++
Recognized Word: have
Recognized Word: support
Recognized Word: for
Recognized Word: generic
Recognized Word: programming
Recognized Word: Java
Recognized Word: does
Recognized Word: not
Recognized Word: at
Recognized Word: least
Recognized Word: not
Recognized Word: quite
Recognized Word: We
Recognized Word: can
Recognized Word: come
Recognized Word: close
Recognized Word: to
Recognized Word: generic
Recognized Word: programming
Recognized Word: in
Recognized Word: Java
Recognized Word: by
Recognized Word: working
Recognized Word: with
Recognized Word: data
Recognized Word: structures
Recognized Word: that
Recognized Word: contain
Recognized Word: elements
Recognized Word: of
Recognized Word: type
Recognized Word: Object
Recognized Word: In
Recognized Word: Java
Recognized Word: every
Recognized Word: class
Recognized Word: is
Recognized Word: a
Recognized Word: subclass
Recognized Word: of
Recognized Word: the
Recognized Word: class
Recognized Word: named
Recognized Word: Object
Recognized Word: This
Recognized Word: means
Recognized Word: that
Recognized Word: every
Recognized Word: object
Recognized Word: can
Recognized Word: be
Recognized Word: assigned
Recognized Word: to
Recognized Word: a
Recognized Word: variable
Recognized Word: of
Recognized Word: type
Recognized Word: Object
Recognized Word: Any
Recognized Word: object
Recognized Word: can
Recognized Word: be
Recognized Word: put
Recognized Word: into
Recognized Word: an
Recognized Word: array
Recognized Word: of
Recognized Word: type
Unrecognized Word: Object[]
Recognized Word: If
Recognized Word: a
Recognized Word: subroutine
Recognized Word: has
Recognized Word: a
Recognized Word: formal
Recognized Word: parameter
Recognized Word: of
Recognized Word: type
Recognized Word: Object
Recognized Word: than
Recognized Word: any
Recognized Word: object
Recognized Word: can
Recognized Word: be
Recognized Word: passed
Recognized Word: to
Recognized Word: the
Recognized Word: subroutine
Recognized Word: as
Recognized Word: an
Recognized Word: actual
Recognized Word: parameter
Recognized Word: If
Recognized Word: we
Recognized Word: defined
Recognized Word: a
Unrecognized Word: DynamicArrayOfObject
Recognized Word: class
Recognized Word: then
Recognized Word: we
Recognized Word: could
Recognized Word: store
Recognized Word: objects
Recognized Word: of
Recognized Word: any
Recognized Word: type
Recognized Word: This
Recognized Word: is
Recognized Word: not
Recognized Word: true
Recognized Word: generic
Recognized Word: programming
Recognized Word: and
Recognized Word: it
Recognized Word: doesn't
Recognized Word: apply
Recognized Word: to
Recognized Word: the
Recognized Word: primitive
Recognized Word: types
Recognized Word: such
Recognized Word: as
Recognized Word: int
Recognized Word: and
Recognized Word: double
Recognized Word: But
Recognized Word: it
Recognized Word: does
Recognized Word: come
Recognized Word: close
Recognized Word: In
Recognized Word: fact
Recognized Word: there
Recognized Word: is
Recognized Word: no
Recognized Word: need
Recognized Word: for
Recognized Word: us
Recognized Word: to
Recognized Word: define
Recognized Word: a
Unrecognized Word: DynamicArrayOfObject
Recognized Word: class
Recognized Word: Java
Recognized Word: already
Recognized Word: has
Recognized Word: a
Recognized Word: standard
Recognized Word: class
Recognized Word: named
Unrecognized Word: ArrayList
Recognized Word: that
Recognized Word: serves
Recognized Word: much
Recognized Word: the
Recognized Word: same
Recognized Word: purpose
Recognized Word: The
Unrecognized Word: ArrayList
Recognized Word: class
Recognized Word: is
Recognized Word: in
Recognized Word: the
Recognized Word: package
Recognized Word: java
Unrecognized Word: util
Recognized Word: so
Recognized Word: if
Recognized Word: you
Recognized Word: want
Recognized Word: to
Recognized Word: use
Recognized Word: the
Unrecognized Word: ArrayList
Recognized Word: class
Recognized Word: in
Recognized Word: a
Recognized Word: program
Recognized Word: you
Recognized Word: should
Recognized Word: put
Recognized Word: the
Recognized Word: directive
Unrecognized Word: 
Recognized Word: import
Recognized Word: java
Unrecognized Word: util
Unrecognized Word: ArrayList;
Recognized Word: or
Unrecognized Word: 
Recognized Word: import
Recognized Word: java
Unrecognized Word: util
Unrecognized Word: *;
Recognized Word: at
Recognized Word: the
Recognized Word: beginning
Recognized Word: of
Recognized Word: your
Recognized Word: source
Recognized Word: code
Recognized Word: file
Recognized Word: The
Unrecognized Word: ArrayList
Recognized Word: class
Recognized Word: differs
Recognized Word: from
Recognized Word: my
Unrecognized Word: DynamicArrayOfInt
Recognized Word: class
Recognized Word: in
Recognized Word: that
Recognized Word: an
Unrecognized Word: ArrayList
Recognized Word: object
Recognized Word: always
Recognized Word: has
Recognized Word: a
Recognized Word: definite
Recognized Word: size
Recognized Word: and
Recognized Word: it
Recognized Word: is
Recognized Word: illegal
Recognized Word: to
Recognized Word: refer
Recognized Word: to
Recognized Word: a
Recognized Word: position
Recognized Word: in
Recognized Word: the
Unrecognized Word: ArrayList
Recognized Word: that
Recognized Word: lies
Recognized Word: outside
Recognized Word: its
Recognized Word: size
Recognized Word: In
Recognized Word: this
Recognized Word: an
Unrecognized Word: ArrayList
Recognized Word: is
Recognized Word: more
Recognized Word: like
Recognized Word: a
Recognized Word: regular
Recognized Word: array
Recognized Word: However
Recognized Word: the
Recognized Word: size
Recognized Word: of
Recognized Word: an
Unrecognized Word: ArrayList
Recognized Word: can
Recognized Word: be
Recognized Word: increased
Recognized Word: at
Recognized Word: will
Recognized Word: The
Unrecognized Word: ArrayList
Recognized Word: class
Recognized Word: defines
Recognized Word: many
Recognized Word: instance
Recognized Word: methods
Recognized Word: I'll
Recognized Word: describe
Recognized Word: some
Recognized Word: of
Recognized Word: the
Recognized Word: most
Recognized Word: useful
Recognized Word: Suppose
Recognized Word: that
Recognized Word: list
Recognized Word: is
Recognized Word: a
Recognized Word: variable
Recognized Word: of
Recognized Word: type
Unrecognized Word: ArrayList
Recognized Word: list
Unrecognized Word: size()
Unrecognized Word: --
Recognized Word: This
Recognized Word: function
Recognized Word: returns
Recognized Word: the
Recognized Word: current
Recognized Word: size
Recognized Word: of
Recognized Word: the
Unrecognized Word: ArrayList
Recognized Word: The
Recognized Word: only
Recognized Word: valid
Recognized Word: positions
Recognized Word: in
Recognized Word: the
Recognized Word: list
Recognized Word: are
Recognized Word: numbers
Recognized Word: in
Recognized Word: the
Recognized Word: range
Unrecognized Word: 0
Recognized Word: to
Recognized Word: list
Unrecognized Word: size()-1
Recognized Word: Note
Recognized Word: that
Recognized Word: the
Recognized Word: size
Recognized Word: can
Recognized Word: be
Recognized Word: zero
Recognized Word: A
Recognized Word: call
Recognized Word: to
Recognized Word: the
Recognized Word: default
Recognized Word: constructor
Recognized Word: new
Unrecognized Word: ArrayList()
Recognized Word: creates
Recognized Word: an
Unrecognized Word: ArrayList
Recognized Word: of
Recognized Word: size
Recognized Word: zero
Recognized Word: list
Unrecognized Word: add(obj)
Unrecognized Word: --
Recognized Word: Adds
Recognized Word: an
Recognized Word: object
Recognized Word: onto
Recognized Word: the
Recognized Word: end
Recognized Word: of
Recognized Word: the
Unrecognized Word: ArrayList
Recognized Word: increasing
Recognized Word: the
Recognized Word: size
Recognized Word: by
Unrecognized Word: 1
Recognized Word: The
Recognized Word: parameter
Recognized Word: obj
Recognized Word: can
Recognized Word: refer
Recognized Word: to
Recognized Word: an
Recognized Word: object
Recognized Word: of
Recognized Word: any
Recognized Word: type
Recognized Word: or
Recognized Word: it
Recognized Word: can
Recognized Word: be
Recognized Word: null
Recognized Word: list
Unrecognized Word: get(N)
Unrecognized Word: --
Recognized Word: This
Recognized Word: function
Recognized Word: returns
Recognized Word: the
Recognized Word: value
Recognized Word: stored
Recognized Word: at
Recognized Word: position
Recognized Word: N
Recognized Word: in
Recognized Word: the
Unrecognized Word: ArrayList
Recognized Word: N
Recognized Word: must
Recognized Word: be
Recognized Word: an
Recognized Word: integer
Recognized Word: in
Recognized Word: the
Recognized Word: range
Unrecognized Word: 0
Recognized Word: to
Recognized Word: list
Unrecognized Word: size()-1
Recognized Word: If
Recognized Word: N
Recognized Word: is
Recognized Word: outside
Recognized Word: this
Recognized Word: range
Recognized Word: an
Recognized Word: error
Recognized Word: occurs
Recognized Word: Calling
Recognized Word: this
Recognized Word: function
Recognized Word: is
Recognized Word: similar
Recognized Word: to
Recognized Word: referring
Recognized Word: to
Unrecognized Word: A[N]
Recognized Word: for
Recognized Word: an
Recognized Word: array
Recognized Word: A
Recognized Word: except
Recognized Word: that
Recognized Word: you
Recognized Word: can't
Recognized Word: use
Recognized Word: list
Unrecognized Word: get(N)
Recognized Word: on
Recognized Word: the
Recognized Word: left
Recognized Word: side
Recognized Word: of
Recognized Word: an
Recognized Word: assignment
Recognized Word: statement
Recognized Word: list
Unrecognized Word: set(N
Unrecognized Word: obj)
Unrecognized Word: --
Recognized Word: Assigns
Recognized Word: the
Recognized Word: object
Recognized Word: obj
Recognized Word: to
Recognized Word: position
Recognized Word: N
Recognized Word: in
Recognized Word: the
Unrecognized Word: ArrayList
Recognized Word: replacing
Recognized Word: the
Recognized Word: item
Recognized Word: previously
Recognized Word: stored
Recognized Word: at
Recognized Word: position
Recognized Word: N
Recognized Word: The
Recognized Word: integer
Recognized Word: N
Recognized Word: must
Recognized Word: be
Recognized Word: in
Recognized Word: the
Recognized Word: range
Recognized Word: from
Unrecognized Word: 0
Recognized Word: to
Recognized Word: list
Unrecognized Word: size()-1
Recognized Word: A
Recognized Word: call
Recognized Word: to
Recognized Word: this
Recognized Word: function
Recognized Word: is
Recognized Word: equivalent
Recognized Word: to
Recognized Word: the
Recognized Word: command
Unrecognized Word: A[N]
Unrecognized Word: =
Recognized Word: obj
Recognized Word: for
Recognized Word: an
Recognized Word: array
Recognized Word: A
Recognized Word: list
Unrecognized Word: remove(obj)
Unrecognized Word: --
Recognized Word: If
Recognized Word: the
Recognized Word: specified
Recognized Word: object
Recognized Word: occurs
Recognized Word: somewhere
Recognized Word: in
Recognized Word: the
Unrecognized Word: ArrayList
Recognized Word: it
Recognized Word: is
Recognized Word: removed
Recognized Word: from
Recognized Word: the
Recognized Word: list
Recognized Word: Any
Recognized Word: items
Recognized Word: in
Recognized Word: the
Recognized Word: list
Recognized Word: that
Recognized Word: come
Recognized Word: after
Recognized Word: the
Recognized Word: removed
Recognized Word: item
Recognized Word: are
Recognized Word: moved
Recognized Word: down
Recognized Word: one
Recognized Word: position
Recognized Word: The
Recognized Word: size
Recognized Word: of
Recognized Word: the
Unrecognized Word: ArrayList
Recognized Word: decreases
Recognized Word: by
Unrecognized Word: 1
Recognized Word: If
Recognized Word: obj
Recognized Word: occurs
Recognized Word: more
Recognized Word: than
Recognized Word: once
Recognized Word: in
Recognized Word: the
Recognized Word: list
Recognized Word: only
Recognized Word: the
Recognized Word: first
Recognized Word: copy
Recognized Word: is
Recognized Word: removed
Recognized Word: list
Unrecognized Word: remove(N)
Unrecognized Word: --
Recognized Word: For
Recognized Word: an
Recognized Word: integer
Recognized Word: N
Recognized Word: this
Recognized Word: removes
Recognized Word: the
Unrecognized Word: N-th
Recognized Word: item
Recognized Word: in
Recognized Word: the
Unrecognized Word: ArrayList
Recognized Word: N
Recognized Word: must
Recognized Word: be
Recognized Word: in
Recognized Word: the
Recognized Word: range
Unrecognized Word: 0
Recognized Word: to
Recognized Word: list
Unrecognized Word: size()-1
Recognized Word: Any
Recognized Word: items
Recognized Word: in
Recognized Word: the
Recognized Word: list
Recognized Word: that
Recognized Word: come
Recognized Word: after
Recognized Word: the
Recognized Word: removed
Recognized Word: item
Recognized Word: are
Recognized Word: moved
Recognized Word: down
Recognized Word: one
Recognized Word: position
Recognized Word: The
Recognized Word: size
Recognized Word: of
Recognized Word: the
Unrecognized Word: ArrayList
Recognized Word: decreases
Recognized Word: by
Unrecognized Word: 1
Recognized Word: list
Unrecognized Word: indexOf(obj)
Unrecognized Word: --
Recognized Word: A
Recognized Word: function
Recognized Word: that
Recognized Word: searches
Recognized Word: for
Recognized Word: the
Recognized Word: object
Recognized Word: obj
Recognized Word: in
Recognized Word: the
Unrecognized Word: ArrayList
Recognized Word: If
Recognized Word: the
Recognized Word: object
Recognized Word: is
Recognized Word: found
Recognized Word: in
Recognized Word: the
Recognized Word: list
Recognized Word: then
Recognized Word: the
Recognized Word: position
Recognized Word: number
Recognized Word: where
Recognized Word: it
Recognized Word: is
Recognized Word: found
Recognized Word: is
Recognized Word: returned
Recognized Word: If
Recognized Word: the
Recognized Word: object
Recognized Word: is
Recognized Word: not
Recognized Word: found
Recognized Word: then
Unrecognized Word: -1
Recognized Word: is
Recognized Word: returned
Recognized Word: For
Recognized Word: example
Recognized Word: suppose
Recognized Word: again
Recognized Word: that
Recognized Word: players
Recognized Word: in
Recognized Word: a
Recognized Word: game
Recognized Word: are
Recognized Word: represented
Recognized Word: by
Recognized Word: objects
Recognized Word: of
Recognized Word: type
Recognized Word: Player
Recognized Word: The
Recognized Word: players
Recognized Word: currently
Recognized Word: in
Recognized Word: the
Recognized Word: game
Recognized Word: could
Recognized Word: be
Recognized Word: stored
Recognized Word: in
Recognized Word: an
Unrecognized Word: ArrayList
Recognized Word: named
Recognized Word: players
Recognized Word: This
Recognized Word: variable
Recognized Word: would
Recognized Word: be
Recognized Word: declared
Recognized Word: as
=================================================
Total words checked:   827
Total correct words:   749
Total incorrect words: 78
Average compares per word: 64551
RunTime for checking:  837989962
Unrecognized Word: ArrrayLists
Recognized Word: The
Unrecognized Word: DynamicArrayOfInt
Recognized Word: class
Recognized Word: could
Recognized Word: be
Recognized Word: used
Recognized Word: in
Recognized Word: any
Recognized Word: situation
Recognized Word: where
Recognized Word: an
Recognized Word: array
Recognized Word: of
Recognized Word: int
Recognized Word: with
Recognized Word: no
Recognized Word: preset
Recognized Word: limit
Recognized Word: on
Recognized Word: the
Recognized Word: size
Recognized Word: is
Recognized Word: needed
Recognized Word: However
Recognized Word: if
Recognized Word: we
Recognized Word: want
Recognized Word: to
Recognized Word: store
Recognized Word: Shapes
Recognized Word: instead
Recognized Word: of
Unrecognized Word: ints
Recognized Word: we
Recognized Word: would
Recognized Word: have
Recognized Word: to
Recognized Word: define
Recognized Word: a
Recognized Word: new
Recognized Word: class
Recognized Word: to
Recognized Word: do
Recognized Word: it
Recognized Word: That
Recognized Word: class
Recognized Word: probably
Recognized Word: named
Unrecognized Word: 
Unrecognized Word: DynamicArrayOfShape
Unrecognized Word: 
Recognized Word: would
Recognized Word: look
Recognized Word: exactly
Recognized Word: the
Recognized Word: same
Recognized Word: as
Recognized Word: the
Unrecognized Word: DynamicArrayOfInt
Recognized Word: class
Recognized Word: except
Recognized Word: that
Recognized Word: everywhere
Recognized Word: the
Recognized Word: type
Unrecognized Word: 
Recognized Word: int
Recognized Word: appears
Recognized Word: it
Recognized Word: would
Recognized Word: be
Recognized Word: replaced
Recognized Word: by
Recognized Word: the
Recognized Word: type
Unrecognized Word: 
Recognized Word: Shape
Unrecognized Word: 
Recognized Word: Similarly
Recognized Word: we
Recognized Word: could
Recognized Word: define
Recognized Word: a
Unrecognized Word: DynamicArrayOfDouble
Recognized Word: class
Recognized Word: a
Unrecognized Word: DynamicArrayOfPlayer
Recognized Word: class
Recognized Word: and
Recognized Word: so
Recognized Word: on
Recognized Word: But
Recognized Word: there
Recognized Word: is
Recognized Word: something
Recognized Word: a
Recognized Word: little
Recognized Word: silly
Recognized Word: about
Recognized Word: this
Recognized Word: since
Recognized Word: all
Recognized Word: these
Recognized Word: classes
Recognized Word: are
Recognized Word: close
Recognized Word: to
Recognized Word: being
Recognized Word: identical
Recognized Word: It
Recognized Word: would
Recognized Word: be
Recognized Word: nice
Recognized Word: to
Recognized Word: be
Recognized Word: able
Recognized Word: to
Recognized Word: write
Recognized Word: some
Recognized Word: kind
Recognized Word: of
Recognized Word: source
Recognized Word: code
Recognized Word: once
Recognized Word: and
Recognized Word: for
Recognized Word: all
Recognized Word: that
Recognized Word: could
Recognized Word: be
Recognized Word: used
Recognized Word: to
Recognized Word: generate
Recognized Word: any
Recognized Word: of
Recognized Word: these
Recognized Word: classes
Recognized Word: on
Recognized Word: demand
Recognized Word: given
Recognized Word: the
Recognized Word: type
Recognized Word: of
Recognized Word: value
Recognized Word: that
Recognized Word: we
Recognized Word: want
Recognized Word: to
Recognized Word: store
Recognized Word: This
Recognized Word: would
Recognized Word: be
Recognized Word: an
Recognized Word: example
Recognized Word: of
Recognized Word: generic
Recognized Word: programming
Recognized Word: Some
Recognized Word: programming
Recognized Word: languages
Recognized Word: such
Recognized Word: as
Unrecognized Word: C++
Recognized Word: have
Recognized Word: support
Recognized Word: for
Recognized Word: generic
Recognized Word: programming
Recognized Word: Java
Recognized Word: does
Recognized Word: not
Recognized Word: at
Recognized Word: least
Recognized Word: not
Recognized Word: quite
Recognized Word: We
Recognized Word: can
Recognized Word: come
Recognized Word: close
Recognized Word: to
Recognized Word: generic
Recognized Word: programming
Recognized Word: in
Recognized Word: Java
Recognized Word: by
Recognized Word: working
Recognized Word: with
Recognized Word: data
Recognized Word: structures
Recognized Word: that
Recognized Word: contain
Recognized Word: elements
Recognized Word: of
Recognized Word: type
Recognized Word: Object
Recognized Word: In
Recognized Word: Java
Recognized Word: every
Recognized Word: class
Recognized Word: is
Recognized Word: a
Recognized Word: subclass
Recognized Word: of
Recognized Word: the
Recognized Word: class
Recognized Word: named
Recognized Word: Object
Recognized Word: This
Recognized Word: means
Recognized Word: that
Recognized Word: every
Recognized Word: object
Recognized Word: can
Recognized Word: be
Recognized Word: assigned
Recognized Word: to
Recognized Word: a
Recognized Word: variable
Recognized Word: of
Recognized Word: type
Recognized Word: Object
Recognized Word: Any
Recognized Word: object
Recognized Word: can
Recognized Word: be
Recognized Word: put
Recognized Word: into
Recognized Word: an
Recognized Word: array
Recognized Word: of
Recognized Word: type
Unrecognized Word: Object[]
Recognized Word: If
Recognized Word: a
Recognized Word: subroutine
Recognized Word: has
Recognized Word: a
Recognized Word: formal
Recognized Word: parameter
Recognized Word: of
Recognized Word: type
Recognized Word: Object
Recognized Word: than
Recognized Word: any
Recognized Word: object
Recognized Word: can
Recognized Word: be
Recognized Word: passed
Recognized Word: to
Recognized Word: the
Recognized Word: subroutine
Recognized Word: as
Recognized Word: an
Recognized Word: actual
Recognized Word: parameter
Recognized Word: If
Recognized Word: we
Recognized Word: defined
Recognized Word: a
Unrecognized Word: DynamicArrayOfObject
Recognized Word: class
Recognized Word: then
Recognized Word: we
Recognized Word: could
Recognized Word: store
Recognized Word: objects
Recognized Word: of
Recognized Word: any
Recognized Word: type
Recognized Word: This
Recognized Word: is
Recognized Word: not
Recognized Word: true
Recognized Word: generic
Recognized Word: programming
Recognized Word: and
Recognized Word: it
Recognized Word: doesn't
Recognized Word: apply
Recognized Word: to
Recognized Word: the
Recognized Word: primitive
Recognized Word: types
Recognized Word: such
Recognized Word: as
Recognized Word: int
Recognized Word: and
Recognized Word: double
Recognized Word: But
Recognized Word: it
Recognized Word: does
Recognized Word: come
Recognized Word: close
Recognized Word: In
Recognized Word: fact
Recognized Word: there
Recognized Word: is
Recognized Word: no
Recognized Word: need
Recognized Word: for
Recognized Word: us
Recognized Word: to
Recognized Word: define
Recognized Word: a
Unrecognized Word: DynamicArrayOfObject
Recognized Word: class
Recognized Word: Java
Recognized Word: already
Recognized Word: has
Recognized Word: a
Recognized Word: standard
Recognized Word: class
Recognized Word: named
Unrecognized Word: ArrayList
Recognized Word: that
Recognized Word: serves
Recognized Word: much
Recognized Word: the
Recognized Word: same
Recognized Word: purpose
Recognized Word: The
Unrecognized Word: ArrayList
Recognized Word: class
Recognized Word: is
Recognized Word: in
Recognized Word: the
Recognized Word: package
Recognized Word: java
Unrecognized Word: util
Recognized Word: so
Recognized Word: if
Recognized Word: you
Recognized Word: want
Recognized Word: to
Recognized Word: use
Recognized Word: the
Unrecognized Word: ArrayList
Recognized Word: class
Recognized Word: in
Recognized Word: a
Recognized Word: program
Recognized Word: you
Recognized Word: should
Recognized Word: put
Recognized Word: the
Recognized Word: directive
Unrecognized Word: 
Recognized Word: import
Recognized Word: java
Unrecognized Word: util
Unrecognized Word: ArrayList;
Recognized Word: or
Unrecognized Word: 
Recognized Word: import
Recognized Word: java
Unrecognized Word: util
Unrecognized Word: *;
Recognized Word: at
Recognized Word: the
Recognized Word: beginning
Recognized Word: of
Recognized Word: your
Recognized Word: source
Recognized Word: code
Recognized Word: file
Recognized Word: The
Unrecognized Word: ArrayList
Recognized Word: class
Recognized Word: differs
Recognized Word: from
Recognized Word: my
Unrecognized Word: DynamicArrayOfInt
Recognized Word: class
Recognized Word: in
Recognized Word: that
Recognized Word: an
Unrecognized Word: ArrayList
Recognized Word: object
Recognized Word: always
Recognized Word: has
Recognized Word: a
Recognized Word: definite
Recognized Word: size
Recognized Word: and
Recognized Word: it
Recognized Word: is
Recognized Word: illegal
Recognized Word: to
Recognized Word: refer
Recognized Word: to
Recognized Word: a
Recognized Word: position
Recognized Word: in
Recognized Word: the
Unrecognized Word: ArrayList
Recognized Word: that
Recognized Word: lies
Recognized Word: outside
Recognized Word: its
Recognized Word: size
Recognized Word: In
Recognized Word: this
Recognized Word: an
Unrecognized Word: ArrayList
Recognized Word: is
Recognized Word: more
Recognized Word: like
Recognized Word: a
Recognized Word: regular
Recognized Word: array
Recognized Word: However
Recognized Word: the
Recognized Word: size
Recognized Word: of
Recognized Word: an
Unrecognized Word: ArrayList
Recognized Word: can
Recognized Word: be
Recognized Word: increased
Recognized Word: at
Recognized Word: will
Recognized Word: The
Unrecognized Word: ArrayList
Recognized Word: class
Recognized Word: defines
Recognized Word: many
Recognized Word: instance
Recognized Word: methods
Recognized Word: I'll
Recognized Word: describe
Recognized Word: some
Recognized Word: of
Recognized Word: the
Recognized Word: most
Recognized Word: useful
Recognized Word: Suppose
Recognized Word: that
Recognized Word: list
Recognized Word: is
Recognized Word: a
Recognized Word: variable
Recognized Word: of
Recognized Word: type
Unrecognized Word: ArrayList
Recognized Word: list
Unrecognized Word: size()
Unrecognized Word: --
Recognized Word: This
Recognized Word: function
Recognized Word: returns
Recognized Word: the
Recognized Word: current
Recognized Word: size
Recognized Word: of
Recognized Word: the
Unrecognized Word: ArrayList
Recognized Word: The
Recognized Word: only
Recognized Word: valid
Recognized Word: positions
Recognized Word: in
Recognized Word: the
Recognized Word: list
Recognized Word: are
Recognized Word: numbers
Recognized Word: in
Recognized Word: the
Recognized Word: range
Unrecognized Word: 0
Recognized Word: to
Recognized Word: list
Unrecognized Word: size()-1
Recognized Word: Note
Recognized Word: that
Recognized Word: the
Recognized Word: size
Recognized Word: can
Recognized Word: be
Recognized Word: zero
Recognized Word: A
Recognized Word: call
Recognized Word: to
Recognized Word: the
Recognized Word: default
Recognized Word: constructor
Recognized Word: new
Unrecognized Word: ArrayList()
Recognized Word: creates
Recognized Word: an
Unrecognized Word: ArrayList
Recognized Word: of
Recognized Word: size
Recognized Word: zero
Recognized Word: list
Unrecognized Word: add(obj)
Unrecognized Word: --
Recognized Word: Adds
Recognized Word: an
Recognized Word: object
Recognized Word: onto
Recognized Word: the
Recognized Word: end
Recognized Word: of
Recognized Word: the
Unrecognized Word: ArrayList
Recognized Word: increasing
Recognized Word: the
Recognized Word: size
Recognized Word: by
Unrecognized Word: 1
Recognized Word: The
Recognized Word: parameter
Recognized Word: obj
Recognized Word: can
Recognized Word: refer
Recognized Word: to
Recognized Word: an
Recognized Word: object
Recognized Word: of
Recognized Word: any
Recognized Word: type
Recognized Word: or
Recognized Word: it
Recognized Word: can
Recognized Word: be
Recognized Word: null
Recognized Word: list
Unrecognized Word: get(N)
Unrecognized Word: --
Recognized Word: This
Recognized Word: function
Recognized Word: returns
Recognized Word: the
Recognized Word: value
Recognized Word: stored
Recognized Word: at
Recognized Word: position
Recognized Word: N
Recognized Word: in
Recognized Word: the
Unrecognized Word: ArrayList
Recognized Word: N
Recognized Word: must
Recognized Word: be
Recognized Word: an
Recognized Word: integer
Recognized Word: in
Recognized Word: the
Recognized Word: range
Unrecognized Word: 0
Recognized Word: to
Recognized Word: list
Unrecognized Word: size()-1
Recognized Word: If
Recognized Word: N
Recognized Word: is
Recognized Word: outside
Recognized Word: this
Recognized Word: range
Recognized Word: an
Recognized Word: error
Recognized Word: occurs
Recognized Word: Calling
Recognized Word: this
Recognized Word: function
Recognized Word: is
Recognized Word: similar
Recognized Word: to
Recognized Word: referring
Recognized Word: to
Unrecognized Word: A[N]
Recognized Word: for
Recognized Word: an
Recognized Word: array
Recognized Word: A
Recognized Word: except
Recognized Word: that
Recognized Word: you
Recognized Word: can't
Recognized Word: use
Recognized Word: list
Unrecognized Word: get(N)
Recognized Word: on
Recognized Word: the
Recognized Word: left
Recognized Word: side
Recognized Word: of
Recognized Word: an
Recognized Word: assignment
Recognized Word: statement
Recognized Word: list
Unrecognized Word: set(N
Unrecognized Word: obj)
Unrecognized Word: --
Recognized Word: Assigns
Recognized Word: the
Recognized Word: object
Recognized Word: obj
Recognized Word: to
Recognized Word: position
Recognized Word: N
Recognized Word: in
Recognized Word: the
Unrecognized Word: ArrayList
Recognized Word: replacing
Recognized Word: the
Recognized Word: item
Recognized Word: previously
Recognized Word: stored
Recognized Word: at
Recognized Word: position
Recognized Word: N
Recognized Word: The
Recognized Word: integer
Recognized Word: N
Recognized Word: must
Recognized Word: be
Recognized Word: in
Recognized Word: the
Recognized Word: range
Recognized Word: from
Unrecognized Word: 0
Recognized Word: to
Recognized Word: list
Unrecognized Word: size()-1
Recognized Word: A
Recognized Word: call
Recognized Word: to
Recognized Word: this
Recognized Word: function
Recognized Word: is
Recognized Word: equivalent
Recognized Word: to
Recognized Word: the
Recognized Word: command
Unrecognized Word: A[N]
Unrecognized Word: =
Recognized Word: obj
Recognized Word: for
Recognized Word: an
Recognized Word: array
Recognized Word: A
Recognized Word: list
Unrecognized Word: remove(obj)
Unrecognized Word: --
Recognized Word: If
Recognized Word: the
Recognized Word: specified
Recognized Word: object
Recognized Word: occurs
Recognized Word: somewhere
Recognized Word: in
Recognized Word: the
Unrecognized Word: ArrayList
Recognized Word: it
Recognized Word: is
Recognized Word: removed
Recognized Word: from
Recognized Word: the
Recognized Word: list
Recognized Word: Any
Recognized Word: items
Recognized Word: in
Recognized Word: the
Recognized Word: list
Recognized Word: that
Recognized Word: come
Recognized Word: after
Recognized Word: the
Recognized Word: removed
Recognized Word: item
Recognized Word: are
Recognized Word: moved
Recognized Word: down
Recognized Word: one
Recognized Word: position
Recognized Word: The
Recognized Word: size
Recognized Word: of
Recognized Word: the
Unrecognized Word: ArrayList
Recognized Word: decreases
Recognized Word: by
Unrecognized Word: 1
Recognized Word: If
Recognized Word: obj
Recognized Word: occurs
Recognized Word: more
Recognized Word: than
Recognized Word: once
Recognized Word: in
Recognized Word: the
Recognized Word: list
Recognized Word: only
Recognized Word: the
Recognized Word: first
Recognized Word: copy
Recognized Word: is
Recognized Word: removed
Recognized Word: list
Unrecognized Word: remove(N)
Unrecognized Word: --
Recognized Word: For
Recognized Word: an
Recognized Word: integer
Recognized Word: N
Recognized Word: this
Recognized Word: removes
Recognized Word: the
Unrecognized Word: N-th
Recognized Word: item
Recognized Word: in
Recognized Word: the
Unrecognized Word: ArrayList
Recognized Word: N
Recognized Word: must
Recognized Word: be
Recognized Word: in
Recognized Word: the
Recognized Word: range
Unrecognized Word: 0
Recognized Word: to
Recognized Word: list
Unrecognized Word: size()-1
Recognized Word: Any
Recognized Word: items
Recognized Word: in
Recognized Word: the
Recognized Word: list
Recognized Word: that
Recognized Word: come
Recognized Word: after
Recognized Word: the
Recognized Word: removed
Recognized Word: item
Recognized Word: are
Recognized Word: moved
Recognized Word: down
Recognized Word: one
Recognized Word: position
Recognized Word: The
Recognized Word: size
Recognized Word: of
Recognized Word: the
Unrecognized Word: ArrayList
Recognized Word: decreases
Recognized Word: by
Unrecognized Word: 1
Recognized Word: list
Unrecognized Word: indexOf(obj)
Unrecognized Word: --
Recognized Word: A
Recognized Word: function
Recognized Word: that
Recognized Word: searches
Recognized Word: for
Recognized Word: the
Recognized Word: object
Recognized Word: obj
Recognized Word: in
Recognized Word: the
Unrecognized Word: ArrayList
Recognized Word: If
Recognized Word: the
Recognized Word: object
Recognized Word: is
Recognized Word: found
Recognized Word: in
Recognized Word: the
Recognized Word: list
Recognized Word: then
Recognized Word: the
Recognized Word: position
Recognized Word: number
Recognized Word: where
Recognized Word: it
Recognized Word: is
Recognized Word: found
Recognized Word: is
Recognized Word: returned
Recognized Word: If
Recognized Word: the
Recognized Word: object
Recognized Word: is
Recognized Word: not
Recognized Word: found
Recognized Word: then
Unrecognized Word: -1
Recognized Word: is
Recognized Word: returned
Recognized Word: For
Recognized Word: example
Recognized Word: suppose
Recognized Word: again
Recognized Word: that
Recognized Word: players
Recognized Word: in
Recognized Word: a
Recognized Word: game
Recognized Word: are
Recognized Word: represented
Recognized Word: by
Recognized Word: objects
Recognized Word: of
Recognized Word: type
Recognized Word: Player
Recognized Word: The
Recognized Word: players
Recognized Word: currently
Recognized Word: in
Recognized Word: the
Recognized Word: game
Recognized Word: could
Recognized Word: be
Recognized Word: stored
Recognized Word: in
Recognized Word: an
Unrecognized Word: ArrayList
Recognized Word: named
Recognized Word: players
Recognized Word: This
Recognized Word: variable
Recognized Word: would
Recognized Word: be
Recognized Word: declared
Recognized Word: as
=================================================
Total words checked:   827
Total correct words:   749
Total incorrect words: 78
Average compares per word: 64551
RunTime for checking:  839669641
Unrecognized Word: ArrrayLists
Recognized Word: The
Unrecognized Word: DynamicArrayOfInt
Recognized Word: class
Recognized Word: could
Recognized Word: be
Recognized Word: used
Recognized Word: in
Recognized Word: any
Recognized Word: situation
Recognized Word: where
Recognized Word: an
Recognized Word: array
Recognized Word: of
Recognized Word: int
Recognized Word: with
Recognized Word: no
Recognized Word: preset
Recognized Word: limit
Recognized Word: on
Recognized Word: the
Recognized Word: size
Recognized Word: is
Recognized Word: needed
Recognized Word: However
Recognized Word: if
Recognized Word: we
Recognized Word: want
Recognized Word: to
Recognized Word: store
Recognized Word: Shapes
Recognized Word: instead
Recognized Word: of
Unrecognized Word: ints
Recognized Word: we
Recognized Word: would
Recognized Word: have
Recognized Word: to
Recognized Word: define
Recognized Word: a
Recognized Word: new
Recognized Word: class
Recognized Word: to
Recognized Word: do
Recognized Word: it
Recognized Word: That
Recognized Word: class
Recognized Word: probably
Recognized Word: named
Unrecognized Word: 
Unrecognized Word: DynamicArrayOfShape
Unrecognized Word: 
Recognized Word: would
Recognized Word: look
Recognized Word: exactly
Recognized Word: the
Recognized Word: same
Recognized Word: as
Recognized Word: the
Unrecognized Word: DynamicArrayOfInt
Recognized Word: class
Recognized Word: except
Recognized Word: that
Recognized Word: everywhere
Recognized Word: the
Recognized Word: type
Unrecognized Word: 
Recognized Word: int
Recognized Word: appears
Recognized Word: it
Recognized Word: would
Recognized Word: be
Recognized Word: replaced
Recognized Word: by
Recognized Word: the
Recognized Word: type
Unrecognized Word: 
Recognized Word: Shape
Unrecognized Word: 
Recognized Word: Similarly
Recognized Word: we
Recognized Word: could
Recognized Word: define
Recognized Word: a
Unrecognized Word: DynamicArrayOfDouble
Recognized Word: class
Recognized Word: a
Unrecognized Word: DynamicArrayOfPlayer
Recognized Word: class
Recognized Word: and
Recognized Word: so
Recognized Word: on
Recognized Word: But
Recognized Word: there
Recognized Word: is
Recognized Word: something
Recognized Word: a
Recognized Word: little
Recognized Word: silly
Recognized Word: about
Recognized Word: this
Recognized Word: since
Recognized Word: all
Recognized Word: these
Recognized Word: classes
Recognized Word: are
Recognized Word: close
Recognized Word: to
Recognized Word: being
Recognized Word: identical
Recognized Word: It
Recognized Word: would
Recognized Word: be
Recognized Word: nice
Recognized Word: to
Recognized Word: be
Recognized Word: able
Recognized Word: to
Recognized Word: write
Recognized Word: some
Recognized Word: kind
Recognized Word: of
Recognized Word: source
Recognized Word: code
Recognized Word: once
Recognized Word: and
Recognized Word: for
Recognized Word: all
Recognized Word: that
Recognized Word: could
Recognized Word: be
Recognized Word: used
Recognized Word: to
Recognized Word: generate
Recognized Word: any
Recognized Word: of
Recognized Word: these
Recognized Word: classes
Recognized Word: on
Recognized Word: demand
Recognized Word: given
Recognized Word: the
Recognized Word: type
Recognized Word: of
Recognized Word: value
Recognized Word: that
Recognized Word: we
Recognized Word: want
Recognized Word: to
Recognized Word: store
Recognized Word: This
Recognized Word: would
Recognized Word: be
Recognized Word: an
Recognized Word: example
Recognized Word: of
Recognized Word: generic
Recognized Word: programming
Recognized Word: Some
Recognized Word: programming
Recognized Word: languages
Recognized Word: such
Recognized Word: as
Unrecognized Word: C++
Recognized Word: have
Recognized Word: support
Recognized Word: for
Recognized Word: generic
Recognized Word: programming
Recognized Word: Java
Recognized Word: does
Recognized Word: not
Recognized Word: at
Recognized Word: least
Recognized Word: not
Recognized Word: quite
Recognized Word: We
Recognized Word: can
Recognized Word: come
Recognized Word: close
Recognized Word: to
Recognized Word: generic
Recognized Word: programming
Recognized Word: in
Recognized Word: Java
Recognized Word: by
Recognized Word: working
Recognized Word: with
Recognized Word: data
Recognized Word: structures
Recognized Word: that
Recognized Word: contain
Recognized Word: elements
Recognized Word: of
Recognized Word: type
Recognized Word: Object
Recognized Word: In
Recognized Word: Java
Recognized Word: every
Recognized Word: class
Recognized Word: is
Recognized Word: a
Recognized Word: subclass
Recognized Word: of
Recognized Word: the
Recognized Word: class
Recognized Word: named
Recognized Word: Object
Recognized Word: This
Recognized Word: means
Recognized Word: that
Recognized Word: every
Recognized Word: object
Recognized Word: can
Recognized Word: be
Recognized Word: assigned
Recognized Word: to
Recognized Word: a
Recognized Word: variable
Recognized Word: of
Recognized Word: type
Recognized Word: Object
Recognized Word: Any
Recognized Word: object
Recognized Word: can
Recognized Word: be
Recognized Word: put
Recognized Word: into
Recognized Word: an
Recognized Word: array
Recognized Word: of
Recognized Word: type
Unrecognized Word: Object[]
Recognized Word: If
Recognized Word: a
Recognized Word: subroutine
Recognized Word: has
Recognized Word: a
Recognized Word: formal
Recognized Word: parameter
Recognized Word: of
Recognized Word: type
Recognized Word: Object
Recognized Word: than
Recognized Word: any
Recognized Word: object
Recognized Word: can
Recognized Word: be
Recognized Word: passed
Recognized Word: to
Recognized Word: the
Recognized Word: subroutine
Recognized Word: as
Recognized Word: an
Recognized Word: actual
Recognized Word: parameter
Recognized Word: If
Recognized Word: we
Recognized Word: defined
Recognized Word: a
Unrecognized Word: DynamicArrayOfObject
Recognized Word: class
Recognized Word: then
Recognized Word: we
Recognized Word: could
Recognized Word: store
Recognized Word: objects
Recognized Word: of
Recognized Word: any
Recognized Word: type
Recognized Word: This
Recognized Word: is
Recognized Word: not
Recognized Word: true
Recognized Word: generic
Recognized Word: programming
Recognized Word: and
Recognized Word: it
Recognized Word: doesn't
Recognized Word: apply
Recognized Word: to
Recognized Word: the
Recognized Word: primitive
Recognized Word: types
Recognized Word: such
Recognized Word: as
Recognized Word: int
Recognized Word: and
Recognized Word: double
Recognized Word: But
Recognized Word: it
Recognized Word: does
Recognized Word: come
Recognized Word: close
Recognized Word: In
Recognized Word: fact
Recognized Word: there
Recognized Word: is
Recognized Word: no
Recognized Word: need
Recognized Word: for
Recognized Word: us
Recognized Word: to
Recognized Word: define
Recognized Word: a
Unrecognized Word: DynamicArrayOfObject
Recognized Word: class
Recognized Word: Java
Recognized Word: already
Recognized Word: has
Recognized Word: a
Recognized Word: standard
Recognized Word: class
Recognized Word: named
Unrecognized Word: ArrayList
Recognized Word: that
Recognized Word: serves
Recognized Word: much
Recognized Word: the
Recognized Word: same
Recognized Word: purpose
Recognized Word: The
Unrecognized Word: ArrayList
Recognized Word: class
Recognized Word: is
Recognized Word: in
Recognized Word: the
Recognized Word: package
Recognized Word: java
Unrecognized Word: util
Recognized Word: so
Recognized Word: if
Recognized Word: you
Recognized Word: want
Recognized Word: to
Recognized Word: use
Recognized Word: the
Unrecognized Word: ArrayList
Recognized Word: class
Recognized Word: in
Recognized Word: a
Recognized Word: program
Recognized Word: you
Recognized Word: should
Recognized Word: put
Recognized Word: the
Recognized Word: directive
Unrecognized Word: 
Recognized Word: import
Recognized Word: java
Unrecognized Word: util
Unrecognized Word: ArrayList;
Recognized Word: or
Unrecognized Word: 
Recognized Word: import
Recognized Word: java
Unrecognized Word: util
Unrecognized Word: *;
Recognized Word: at
Recognized Word: the
Recognized Word: beginning
Recognized Word: of
Recognized Word: your
Recognized Word: source
Recognized Word: code
Recognized Word: file
Recognized Word: The
Unrecognized Word: ArrayList
Recognized Word: class
Recognized Word: differs
Recognized Word: from
Recognized Word: my
Unrecognized Word: DynamicArrayOfInt
Recognized Word: class
Recognized Word: in
Recognized Word: that
Recognized Word: an
Unrecognized Word: ArrayList
Recognized Word: object
Recognized Word: always
Recognized Word: has
Recognized Word: a
Recognized Word: definite
Recognized Word: size
Recognized Word: and
Recognized Word: it
Recognized Word: is
Recognized Word: illegal
Recognized Word: to
Recognized Word: refer
Recognized Word: to
Recognized Word: a
Recognized Word: position
Recognized Word: in
Recognized Word: the
Unrecognized Word: ArrayList
Recognized Word: that
Recognized Word: lies
Recognized Word: outside
Recognized Word: its
Recognized Word: size
Recognized Word: In
Recognized Word: this
Recognized Word: an
Unrecognized Word: ArrayList
Recognized Word: is
Recognized Word: more
Recognized Word: like
Recognized Word: a
Recognized Word: regular
Recognized Word: array
Recognized Word: However
Recognized Word: the
Recognized Word: size
Recognized Word: of
Recognized Word: an
Unrecognized Word: ArrayList
Recognized Word: can
Recognized Word: be
Recognized Word: increased
Recognized Word: at
Recognized Word: will
Recognized Word: The
Unrecognized Word: ArrayList
Recognized Word: class
Recognized Word: defines
Recognized Word: many
Recognized Word: instance
Recognized Word: methods
Recognized Word: I'll
Recognized Word: describe
Recognized Word: some
Recognized Word: of
Recognized Word: the
Recognized Word: most
Recognized Word: useful
Recognized Word: Suppose
Recognized Word: that
Recognized Word: list
Recognized Word: is
Recognized Word: a
Recognized Word: variable
Recognized Word: of
Recognized Word: type
Unrecognized Word: ArrayList
Recognized Word: list
Unrecognized Word: size()
Unrecognized Word: --
Recognized Word: This
Recognized Word: function
Recognized Word: returns
Recognized Word: the
Recognized Word: current
Recognized Word: size
Recognized Word: of
Recognized Word: the
Unrecognized Word: ArrayList
Recognized Word: The
Recognized Word: only
Recognized Word: valid
Recognized Word: positions
Recognized Word: in
Recognized Word: the
Recognized Word: list
Recognized Word: are
Recognized Word: numbers
Recognized Word: in
Recognized Word: the
Recognized Word: range
Unrecognized Word: 0
Recognized Word: to
Recognized Word: list
Unrecognized Word: size()-1
Recognized Word: Note
Recognized Word: that
Recognized Word: the
Recognized Word: size
Recognized Word: can
Recognized Word: be
Recognized Word: zero
Recognized Word: A
Recognized Word: call
Recognized Word: to
Recognized Word: the
Recognized Word: default
Recognized Word: constructor
Recognized Word: new
Unrecognized Word: ArrayList()
Recognized Word: creates
Recognized Word: an
Unrecognized Word: ArrayList
Recognized Word: of
Recognized Word: size
Recognized Word: zero
Recognized Word: list
Unrecognized Word: add(obj)
Unrecognized Word: --
Recognized Word: Adds
Recognized Word: an
Recognized Word: object
Recognized Word: onto
Recognized Word: the
Recognized Word: end
Recognized Word: of
Recognized Word: the
Unrecognized Word: ArrayList
Recognized Word: increasing
Recognized Word: the
Recognized Word: size
Recognized Word: by
Unrecognized Word: 1
Recognized Word: The
Recognized Word: parameter
Recognized Word: obj
Recognized Word: can
Recognized Word: refer
Recognized Word: to
Recognized Word: an
Recognized Word: object
Recognized Word: of
Recognized Word: any
Recognized Word: type
Recognized Word: or
Recognized Word: it
Recognized Word: can
Recognized Word: be
Recognized Word: null
Recognized Word: list
Unrecognized Word: get(N)
Unrecognized Word: --
Recognized Word: This
Recognized Word: function
Recognized Word: returns
Recognized Word: the
Recognized Word: value
Recognized Word: stored
Recognized Word: at
Recognized Word: position
Recognized Word: N
Recognized Word: in
Recognized Word: the
Unrecognized Word: ArrayList
Recognized Word: N
Recognized Word: must
Recognized Word: be
Recognized Word: an
Recognized Word: integer
Recognized Word: in
Recognized Word: the
Recognized Word: range
Unrecognized Word: 0
Recognized Word: to
Recognized Word: list
Unrecognized Word: size()-1
Recognized Word: If
Recognized Word: N
Recognized Word: is
Recognized Word: outside
Recognized Word: this
Recognized Word: range
Recognized Word: an
Recognized Word: error
Recognized Word: occurs
Recognized Word: Calling
Recognized Word: this
Recognized Word: function
Recognized Word: is
Recognized Word: similar
Recognized Word: to
Recognized Word: referring
Recognized Word: to
Unrecognized Word: A[N]
Recognized Word: for
Recognized Word: an
Recognized Word: array
Recognized Word: A
Recognized Word: except
Recognized Word: that
Recognized Word: you
Recognized Word: can't
Recognized Word: use
Recognized Word: list
Unrecognized Word: get(N)
Recognized Word: on
Recognized Word: the
Recognized Word: left
Recognized Word: side
Recognized Word: of
Recognized Word: an
Recognized Word: assignment
Recognized Word: statement
Recognized Word: list
Unrecognized Word: set(N
Unrecognized Word: obj)
Unrecognized Word: --
Recognized Word: Assigns
Recognized Word: the
Recognized Word: object
Recognized Word: obj
Recognized Word: to
Recognized Word: position
Recognized Word: N
Recognized Word: in
Recognized Word: the
Unrecognized Word: ArrayList
Recognized Word: replacing
Recognized Word: the
Recognized Word: item
Recognized Word: previously
Recognized Word: stored
Recognized Word: at
Recognized Word: position
Recognized Word: N
Recognized Word: The
Recognized Word: integer
Recognized Word: N
Recognized Word: must
Recognized Word: be
Recognized Word: in
Recognized Word: the
Recognized Word: range
Recognized Word: from
Unrecognized Word: 0
Recognized Word: to
Recognized Word: list
Unrecognized Word: size()-1
Recognized Word: A
Recognized Word: call
Recognized Word: to
Recognized Word: this
Recognized Word: function
Recognized Word: is
Recognized Word: equivalent
Recognized Word: to
Recognized Word: the
Recognized Word: command
Unrecognized Word: A[N]
Unrecognized Word: =
Recognized Word: obj
Recognized Word: for
Recognized Word: an
Recognized Word: array
Recognized Word: A
Recognized Word: list
Unrecognized Word: remove(obj)
Unrecognized Word: --
Recognized Word: If
Recognized Word: the
Recognized Word: specified
Recognized Word: object
Recognized Word: occurs
Recognized Word: somewhere
Recognized Word: in
Recognized Word: the
Unrecognized Word: ArrayList
Recognized Word: it
Recognized Word: is
Recognized Word: removed
Recognized Word: from
Recognized Word: the
Recognized Word: list
Recognized Word: Any
Recognized Word: items
Recognized Word: in
Recognized Word: the
Recognized Word: list
Recognized Word: that
Recognized Word: come
Recognized Word: after
Recognized Word: the
Recognized Word: removed
Recognized Word: item
Recognized Word: are
Recognized Word: moved
Recognized Word: down
Recognized Word: one
Recognized Word: position
Recognized Word: The
Recognized Word: size
Recognized Word: of
Recognized Word: the
Unrecognized Word: ArrayList
Recognized Word: decreases
Recognized Word: by
Unrecognized Word: 1
Recognized Word: If
Recognized Word: obj
Recognized Word: occurs
Recognized Word: more
Recognized Word: than
Recognized Word: once
Recognized Word: in
Recognized Word: the
Recognized Word: list
Recognized Word: only
Recognized Word: the
Recognized Word: first
Recognized Word: copy
Recognized Word: is
Recognized Word: removed
Recognized Word: list
Unrecognized Word: remove(N)
Unrecognized Word: --
Recognized Word: For
Recognized Word: an
Recognized Word: integer
Recognized Word: N
Recognized Word: this
Recognized Word: removes
Recognized Word: the
Unrecognized Word: N-th
Recognized Word: item
Recognized Word: in
Recognized Word: the
Unrecognized Word: ArrayList
Recognized Word: N
Recognized Word: must
Recognized Word: be
Recognized Word: in
Recognized Word: the
Recognized Word: range
Unrecognized Word: 0
Recognized Word: to
Recognized Word: list
Unrecognized Word: size()-1
Recognized Word: Any
Recognized Word: items
Recognized Word: in
Recognized Word: the
Recognized Word: list
Recognized Word: that
Recognized Word: come
Recognized Word: after
Recognized Word: the
Recognized Word: removed
Recognized Word: item
Recognized Word: are
Recognized Word: moved
Recognized Word: down
Recognized Word: one
Recognized Word: position
Recognized Word: The
Recognized Word: size
Recognized Word: of
Recognized Word: the
Unrecognized Word: ArrayList
Recognized Word: decreases
Recognized Word: by
Unrecognized Word: 1
Recognized Word: list
Unrecognized Word: indexOf(obj)
Unrecognized Word: --
Recognized Word: A
Recognized Word: function
Recognized Word: that
Recognized Word: searches
Recognized Word: for
Recognized Word: the
Recognized Word: object
Recognized Word: obj
Recognized Word: in
Recognized Word: the
Unrecognized Word: ArrayList
Recognized Word: If
Recognized Word: the
Recognized Word: object
Recognized Word: is
Recognized Word: found
Recognized Word: in
Recognized Word: the
Recognized Word: list
Recognized Word: then
Recognized Word: the
Recognized Word: position
Recognized Word: number
Recognized Word: where
Recognized Word: it
Recognized Word: is
Recognized Word: found
Recognized Word: is
Recognized Word: returned
Recognized Word: If
Recognized Word: the
Recognized Word: object
Recognized Word: is
Recognized Word: not
Recognized Word: found
Recognized Word: then
Unrecognized Word: -1
Recognized Word: is
Recognized Word: returned
Recognized Word: For
Recognized Word: example
Recognized Word: suppose
Recognized Word: again
Recognized Word: that
Recognized Word: players
Recognized Word: in
Recognized Word: a
Recognized Word: game
Recognized Word: are
Recognized Word: represented
Recognized Word: by
Recognized Word: objects
Recognized Word: of
Recognized Word: type
Recognized Word: Player
Recognized Word: The
Recognized Word: players
Recognized Word: currently
Recognized Word: in
Recognized Word: the
Recognized Word: game
Recognized Word: could
Recognized Word: be
Recognized Word: stored
Recognized Word: in
Recognized Word: an
Unrecognized Word: ArrayList
Recognized Word: named
Recognized Word: players
Recognized Word: This
Recognized Word: variable
Recognized Word: would
Recognized Word: be
Recognized Word: declared
Recognized Word: as
=================================================
Total words checked:   827
Total correct words:   749
Total incorrect words: 78
Average compares per word: 64551
RunTime for checking:  372340325
Unrecognized Word: ArrrayLists
Recognized Word: The
Unrecognized Word: DynamicArrayOfInt
Recognized Word: class
Recognized Word: could
Recognized Word: be
Recognized Word: used
Recognized Word: in
Recognized Word: any
Recognized Word: situation
Recognized Word: where
Recognized Word: an
Recognized Word: array
Recognized Word: of
Recognized Word: int
Recognized Word: with
Recognized Word: no
Recognized Word: preset
Recognized Word: limit
Recognized Word: on
Recognized Word: the
Recognized Word: size
Recognized Word: is
Recognized Word: needed
Recognized Word: However
Recognized Word: if
Recognized Word: we
Recognized Word: want
Recognized Word: to
Recognized Word: store
Recognized Word: Shapes
Recognized Word: instead
Recognized Word: of
Unrecognized Word: ints
Recognized Word: we
Recognized Word: would
Recognized Word: have
Recognized Word: to
Recognized Word: define
Recognized Word: a
Recognized Word: new
Recognized Word: class
Recognized Word: to
Recognized Word: do
Recognized Word: it
Recognized Word: That
Recognized Word: class
Recognized Word: probably
Recognized Word: named
Unrecognized Word: 
Unrecognized Word: DynamicArrayOfShape
Unrecognized Word: 
Recognized Word: would
Recognized Word: look
Recognized Word: exactly
Recognized Word: the
Recognized Word: same
Recognized Word: as
Recognized Word: the
Unrecognized Word: DynamicArrayOfInt
Recognized Word: class
Recognized Word: except
Recognized Word: that
Recognized Word: everywhere
Recognized Word: the
Recognized Word: type
Unrecognized Word: 
Recognized Word: int
Recognized Word: appears
Recognized Word: it
Recognized Word: would
Recognized Word: be
Recognized Word: replaced
Recognized Word: by
Recognized Word: the
Recognized Word: type
Unrecognized Word: 
Recognized Word: Shape
Unrecognized Word: 
Recognized Word: Similarly
Recognized Word: we
Recognized Word: could
Recognized Word: define
Recognized Word: a
Unrecognized Word: DynamicArrayOfDouble
Recognized Word: class
Recognized Word: a
Unrecognized Word: DynamicArrayOfPlayer
Recognized Word: class
Recognized Word: and
Recognized Word: so
Recognized Word: on
Recognized Word: But
Recognized Word: there
Recognized Word: is
Recognized Word: something
Recognized Word: a
Recognized Word: little
Recognized Word: silly
Recognized Word: about
Recognized Word: this
Recognized Word: since
Recognized Word: all
Recognized Word: these
Recognized Word: classes
Recognized Word: are
Recognized Word: close
Recognized Word: to
Recognized Word: being
Recognized Word: identical
Recognized Word: It
Recognized Word: would
Recognized Word: be
Recognized Word: nice
Recognized Word: to
Recognized Word: be
Recognized Word: able
Recognized Word: to
Recognized Word: write
Recognized Word: some
Recognized Word: kind
Recognized Word: of
Recognized Word: source
Recognized Word: code
Recognized Word: once
Recognized Word: and
Recognized Word: for
Recognized Word: all
Recognized Word: that
Recognized Word: could
Recognized Word: be
Recognized Word: used
Recognized Word: to
Recognized Word: generate
Recognized Word: any
Recognized Word: of
Recognized Word: these
Recognized Word: classes
Recognized Word: on
Recognized Word: demand
Recognized Word: given
Recognized Word: the
Recognized Word: type
Recognized Word: of
Recognized Word: value
Recognized Word: that
Recognized Word: we
Recognized Word: want
Recognized Word: to
Recognized Word: store
Recognized Word: This
Recognized Word: would
Recognized Word: be
Recognized Word: an
Recognized Word: example
Recognized Word: of
Recognized Word: generic
Recognized Word: programming
Recognized Word: Some
Recognized Word: programming
Recognized Word: languages
Recognized Word: such
Recognized Word: as
Unrecognized Word: C++
Recognized Word: have
Recognized Word: support
Recognized Word: for
Recognized Word: generic
Recognized Word: programming
Recognized Word: Java
Recognized Word: does
Recognized Word: not
Recognized Word: at
Recognized Word: least
Recognized Word: not
Recognized Word: quite
Recognized Word: We
Recognized Word: can
Recognized Word: come
Recognized Word: close
Recognized Word: to
Recognized Word: generic
Recognized Word: programming
Recognized Word: in
Recognized Word: Java
Recognized Word: by
Recognized Word: working
Recognized Word: with
Recognized Word: data
Recognized Word: structures
Recognized Word: that
Recognized Word: contain
Recognized Word: elements
Recognized Word: of
Recognized Word: type
Recognized Word: Object
Recognized Word: In
Recognized Word: Java
Recognized Word: every
Recognized Word: class
Recognized Word: is
Recognized Word: a
Recognized Word: subclass
Recognized Word: of
Recognized Word: the
Recognized Word: class
Recognized Word: named
Recognized Word: Object
Recognized Word: This
Recognized Word: means
Recognized Word: that
Recognized Word: every
Recognized Word: object
Recognized Word: can
Recognized Word: be
Recognized Word: assigned
Recognized Word: to
Recognized Word: a
Recognized Word: variable
Recognized Word: of
Recognized Word: type
Recognized Word: Object
Recognized Word: Any
Recognized Word: object
Recognized Word: can
Recognized Word: be
Recognized Word: put
Recognized Word: into
Recognized Word: an
Recognized Word: array
Recognized Word: of
Recognized Word: type
Unrecognized Word: Object[]
Recognized Word: If
Recognized Word: a
Recognized Word: subroutine
Recognized Word: has
Recognized Word: a
Recognized Word: formal
Recognized Word: parameter
Recognized Word: of
Recognized Word: type
Recognized Word: Object
Recognized Word: than
Recognized Word: any
Recognized Word: object
Recognized Word: can
Recognized Word: be
Recognized Word: passed
Recognized Word: to
Recognized Word: the
Recognized Word: subroutine
Recognized Word: as
Recognized Word: an
Recognized Word: actual
Recognized Word: parameter
Recognized Word: If
Recognized Word: we
Recognized Word: defined
Recognized Word: a
Unrecognized Word: DynamicArrayOfObject
Recognized Word: class
Recognized Word: then
Recognized Word: we
Recognized Word: could
Recognized Word: store
Recognized Word: objects
Recognized Word: of
Recognized Word: any
Recognized Word: type
Recognized Word: This
Recognized Word: is
Recognized Word: not
Recognized Word: true
Recognized Word: generic
Recognized Word: programming
Recognized Word: and
Recognized Word: it
Recognized Word: doesn't
Recognized Word: apply
Recognized Word: to
Recognized Word: the
Recognized Word: primitive
Recognized Word: types
Recognized Word: such
Recognized Word: as
Recognized Word: int
Recognized Word: and
Recognized Word: double
Recognized Word: But
Recognized Word: it
Recognized Word: does
Recognized Word: come
Recognized Word: close
Recognized Word: In
Recognized Word: fact
Recognized Word: there
Recognized Word: is
Recognized Word: no
Recognized Word: need
Recognized Word: for
Recognized Word: us
Recognized Word: to
Recognized Word: define
Recognized Word: a
Unrecognized Word: DynamicArrayOfObject
Recognized Word: class
Recognized Word: Java
Recognized Word: already
Recognized Word: has
Recognized Word: a
Recognized Word: standard
Recognized Word: class
Recognized Word: named
Unrecognized Word: ArrayList
Recognized Word: that
Recognized Word: serves
Recognized Word: much
Recognized Word: the
Recognized Word: same
Recognized Word: purpose
Recognized Word: The
Unrecognized Word: ArrayList
Recognized Word: class
Recognized Word: is
Recognized Word: in
Recognized Word: the
Recognized Word: package
Recognized Word: java
Unrecognized Word: util
Recognized Word: so
Recognized Word: if
Recognized Word: you
Recognized Word: want
Recognized Word: to
Recognized Word: use
Recognized Word: the
Unrecognized Word: ArrayList
Recognized Word: class
Recognized Word: in
Recognized Word: a
Recognized Word: program
Recognized Word: you
Recognized Word: should
Recognized Word: put
Recognized Word: the
Recognized Word: directive
Unrecognized Word: 
Recognized Word: import
Recognized Word: java
Unrecognized Word: util
Unrecognized Word: ArrayList;
Recognized Word: or
Unrecognized Word: 
Recognized Word: import
Recognized Word: java
Unrecognized Word: util
Unrecognized Word: *;
Recognized Word: at
Recognized Word: the
Recognized Word: beginning
Recognized Word: of
Recognized Word: your
Recognized Word: source
Recognized Word: code
Recognized Word: file
Recognized Word: The
Unrecognized Word: ArrayList
Recognized Word: class
Recognized Word: differs
Recognized Word: from
Recognized Word: my
Unrecognized Word: DynamicArrayOfInt
Recognized Word: class
Recognized Word: in
Recognized Word: that
Recognized Word: an
Unrecognized Word: ArrayList
Recognized Word: object
Recognized Word: always
Recognized Word: has
Recognized Word: a
Recognized Word: definite
Recognized Word: size
Recognized Word: and
Recognized Word: it
Recognized Word: is
Recognized Word: illegal
Recognized Word: to
Recognized Word: refer
Recognized Word: to
Recognized Word: a
Recognized Word: position
Recognized Word: in
Recognized Word: the
Unrecognized Word: ArrayList
Recognized Word: that
Recognized Word: lies
Recognized Word: outside
Recognized Word: its
Recognized Word: size
Recognized Word: In
Recognized Word: this
Recognized Word: an
Unrecognized Word: ArrayList
Recognized Word: is
Recognized Word: more
Recognized Word: like
Recognized Word: a
Recognized Word: regular
Recognized Word: array
Recognized Word: However
Recognized Word: the
Recognized Word: size
Recognized Word: of
Recognized Word: an
Unrecognized Word: ArrayList
Recognized Word: can
Recognized Word: be
Recognized Word: increased
Recognized Word: at
Recognized Word: will
Recognized Word: The
Unrecognized Word: ArrayList
Recognized Word: class
Recognized Word: defines
Recognized Word: many
Recognized Word: instance
Recognized Word: methods
Recognized Word: I'll
Recognized Word: describe
Recognized Word: some
Recognized Word: of
Recognized Word: the
Recognized Word: most
Recognized Word: useful
Recognized Word: Suppose
Recognized Word: that
Recognized Word: list
Recognized Word: is
Recognized Word: a
Recognized Word: variable
Recognized Word: of
Recognized Word: type
Unrecognized Word: ArrayList
Recognized Word: list
Unrecognized Word: size()
Unrecognized Word: --
Recognized Word: This
Recognized Word: function
Recognized Word: returns
Recognized Word: the
Recognized Word: current
Recognized Word: size
Recognized Word: of
Recognized Word: the
Unrecognized Word: ArrayList
Recognized Word: The
Recognized Word: only
Recognized Word: valid
Recognized Word: positions
Recognized Word: in
Recognized Word: the
Recognized Word: list
Recognized Word: are
Recognized Word: numbers
Recognized Word: in
Recognized Word: the
Recognized Word: range
Unrecognized Word: 0
Recognized Word: to
Recognized Word: list
Unrecognized Word: size()-1
Recognized Word: Note
Recognized Word: that
Recognized Word: the
Recognized Word: size
Recognized Word: can
Recognized Word: be
Recognized Word: zero
Recognized Word: A
Recognized Word: call
Recognized Word: to
Recognized Word: the
Recognized Word: default
Recognized Word: constructor
Recognized Word: new
Unrecognized Word: ArrayList()
Recognized Word: creates
Recognized Word: an
Unrecognized Word: ArrayList
Recognized Word: of
Recognized Word: size
Recognized Word: zero
Recognized Word: list
Unrecognized Word: add(obj)
Unrecognized Word: --
Recognized Word: Adds
Recognized Word: an
Recognized Word: object
Recognized Word: onto
Recognized Word: the
Recognized Word: end
Recognized Word: of
Recognized Word: the
Unrecognized Word: ArrayList
Recognized Word: increasing
Recognized Word: the
Recognized Word: size
Recognized Word: by
Unrecognized Word: 1
Recognized Word: The
Recognized Word: parameter
Recognized Word: obj
Recognized Word: can
Recognized Word: refer
Recognized Word: to
Recognized Word: an
Recognized Word: object
Recognized Word: of
Recognized Word: any
Recognized Word: type
Recognized Word: or
Recognized Word: it
Recognized Word: can
Recognized Word: be
Recognized Word: null
Recognized Word: list
Unrecognized Word: get(N)
Unrecognized Word: --
Recognized Word: This
Recognized Word: function
Recognized Word: returns
Recognized Word: the
Recognized Word: value
Recognized Word: stored
Recognized Word: at
Recognized Word: position
Recognized Word: N
Recognized Word: in
Recognized Word: the
Unrecognized Word: ArrayList
Recognized Word: N
Recognized Word: must
Recognized Word: be
Recognized Word: an
Recognized Word: integer
Recognized Word: in
Recognized Word: the
Recognized Word: range
Unrecognized Word: 0
Recognized Word: to
Recognized Word: list
Unrecognized Word: size()-1
Recognized Word: If
Recognized Word: N
Recognized Word: is
Recognized Word: outside
Recognized Word: this
Recognized Word: range
Recognized Word: an
Recognized Word: error
Recognized Word: occurs
Recognized Word: Calling
Recognized Word: this
Recognized Word: function
Recognized Word: is
Recognized Word: similar
Recognized Word: to
Recognized Word: referring
Recognized Word: to
Unrecognized Word: A[N]
Recognized Word: for
Recognized Word: an
Recognized Word: array
Recognized Word: A
Recognized Word: except
Recognized Word: that
Recognized Word: you
Recognized Word: can't
Recognized Word: use
Recognized Word: list
Unrecognized Word: get(N)
Recognized Word: on
Recognized Word: the
Recognized Word: left
Recognized Word: side
Recognized Word: of
Recognized Word: an
Recognized Word: assignment
Recognized Word: statement
Recognized Word: list
Unrecognized Word: set(N
Unrecognized Word: obj)
Unrecognized Word: --
Recognized Word: Assigns
Recognized Word: the
Recognized Word: object
Recognized Word: obj
Recognized Word: to
Recognized Word: position
Recognized Word: N
Recognized Word: in
Recognized Word: the
Unrecognized Word: ArrayList
Recognized Word: replacing
Recognized Word: the
Recognized Word: item
Recognized Word: previously
Recognized Word: stored
Recognized Word: at
Recognized Word: position
Recognized Word: N
Recognized Word: The
Recognized Word: integer
Recognized Word: N
Recognized Word: must
Recognized Word: be
Recognized Word: in
Recognized Word: the
Recognized Word: range
Recognized Word: from
Unrecognized Word: 0
Recognized Word: to
Recognized Word: list
Unrecognized Word: size()-1
Recognized Word: A
Recognized Word: call
Recognized Word: to
Recognized Word: this
Recognized Word: function
Recognized Word: is
Recognized Word: equivalent
Recognized Word: to
Recognized Word: the
Recognized Word: command
Unrecognized Word: A[N]
Unrecognized Word: =
Recognized Word: obj
Recognized Word: for
Recognized Word: an
Recognized Word: array
Recognized Word: A
Recognized Word: list
Unrecognized Word: remove(obj)
Unrecognized Word: --
Recognized Word: If
Recognized Word: the
Recognized Word: specified
Recognized Word: object
Recognized Word: occurs
Recognized Word: somewhere
Recognized Word: in
Recognized Word: the
Unrecognized Word: ArrayList
Recognized Word: it
Recognized Word: is
Recognized Word: removed
Recognized Word: from
Recognized Word: the
Recognized Word: list
Recognized Word: Any
Recognized Word: items
Recognized Word: in
Recognized Word: the
Recognized Word: list
Recognized Word: that
Recognized Word: come
Recognized Word: after
Recognized Word: the
Recognized Word: removed
Recognized Word: item
Recognized Word: are
Recognized Word: moved
Recognized Word: down
Recognized Word: one
Recognized Word: position
Recognized Word: The
Recognized Word: size
Recognized Word: of
Recognized Word: the
Unrecognized Word: ArrayList
Recognized Word: decreases
Recognized Word: by
Unrecognized Word: 1
Recognized Word: If
Recognized Word: obj
Recognized Word: occurs
Recognized Word: more
Recognized Word: than
Recognized Word: once
Recognized Word: in
Recognized Word: the
Recognized Word: list
Recognized Word: only
Recognized Word: the
Recognized Word: first
Recognized Word: copy
Recognized Word: is
Recognized Word: removed
Recognized Word: list
Unrecognized Word: remove(N)
Unrecognized Word: --
Recognized Word: For
Recognized Word: an
Recognized Word: integer
Recognized Word: N
Recognized Word: this
Recognized Word: removes
Recognized Word: the
Unrecognized Word: N-th
Recognized Word: item
Recognized Word: in
Recognized Word: the
Unrecognized Word: ArrayList
Recognized Word: N
Recognized Word: must
Recognized Word: be
Recognized Word: in
Recognized Word: the
Recognized Word: range
Unrecognized Word: 0
Recognized Word: to
Recognized Word: list
Unrecognized Word: size()-1
Recognized Word: Any
Recognized Word: items
Recognized Word: in
Recognized Word: the
Recognized Word: list
Recognized Word: that
Recognized Word: come
Recognized Word: after
Recognized Word: the
Recognized Word: removed
Recognized Word: item
Recognized Word: are
Recognized Word: moved
Recognized Word: down
Recognized Word: one
Recognized Word: position
Recognized Word: The
Recognized Word: size
Recognized Word: of
Recognized Word: the
Unrecognized Word: ArrayList
Recognized Word: decreases
Recognized Word: by
Unrecognized Word: 1
Recognized Word: list
Unrecognized Word: indexOf(obj)
Unrecognized Word: --
Recognized Word: A
Recognized Word: function
Recognized Word: that
Recognized Word: searches
Recognized Word: for
Recognized Word: the
Recognized Word: object
Recognized Word: obj
Recognized Word: in
Recognized Word: the
Unrecognized Word: ArrayList
Recognized Word: If
Recognized Word: the
Recognized Word: object
Recognized Word: is
Recognized Word: found
Recognized Word: in
Recognized Word: the
Recognized Word: list
Recognized Word: then
Recognized Word: the
Recognized Word: position
Recognized Word: number
Recognized Word: where
Recognized Word: it
Recognized Word: is
Recognized Word: found
Recognized Word: is
Recognized Word: returned
Recognized Word: If
Recognized Word: the
Recognized Word: object
Recognized Word: is
Recognized Word: not
Recognized Word: found
Recognized Word: then
Unrecognized Word: -1
Recognized Word: is
Recognized Word: returned
Recognized Word: For
Recognized Word: example
Recognized Word: suppose
Recognized Word: again
Recognized Word: that
Recognized Word: players
Recognized Word: in
Recognized Word: a
Recognized Word: game
Recognized Word: are
Recognized Word: represented
Recognized Word: by
Recognized Word: objects
Recognized Word: of
Recognized Word: type
Recognized Word: Player
Recognized Word: The
Recognized Word: players
Recognized Word: currently
Recognized Word: in
Recognized Word: the
Recognized Word: game
Recognized Word: could
Recognized Word: be
Recognized Word: stored
Recognized Word: in
Recognized Word: an
Unrecognized Word: ArrayList
Recognized Word: named
Recognized Word: players
Recognized Word: This
Recognized Word: variable
Recognized Word: would
Recognized Word: be
Recognized Word: declared
Recognized Word: as
=================================================
Total words checked:   827
Total correct words:   749
Total incorrect words: 78
Average compares per word: 64551
RunTime for checking:  859149667
